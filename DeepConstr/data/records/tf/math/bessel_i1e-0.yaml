args:
  dtype:
  - tensor
  - str
  is_pos:
  - false
  - false
  name:
  - x
  - name
  required:
  - true
  - false
name: tf.math.bessel_i1e
package: null
pass_rate: 100
rules:
- - cot: 'The error is due to the function tf.math.bessel_i1e not being able to find
      a device for the node with data type DT_BFLOAT16. Therefore, the data type of
      the ''x'' variable should not be DT_BFLOAT16. Op: !=, and Right: ''DT_BFLOAT16''.'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
      msg: "Could not find device for node: {{node BesselI1e}} = BesselI1e[T=DT_BFLOAT16]\n\
        All kernels registered for op BesselI1e:\n  device='XLA_CPU_JIT'; T in [DT_FLOAT,\
        \ DT_DOUBLE, DT_BFLOAT16, DT_HALF]\n  device='XLA_GPU_JIT'; T in [DT_FLOAT,\
        \ DT_DOUBLE, DT_BFLOAT16, DT_HALF]\n  device='GPU'; T in [DT_DOUBLE]\n  device='GPU';\
        \ T in [DT_FLOAT]\n  device='GPU'; T in [DT_HALF]\n  device='CPU'; T in [DT_DOUBLE]\n\
        \  device='CPU'; T in [DT_FLOAT]\n  device='CPU'; T in [DT_HALF]\n [Op:BesselI1e]"
      package: tensorflow
    txt: x.dtype != 'DT_BFLOAT16'
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'From the error message, it is clear that the type of ''x'' is int32, but
      the function tf.math.bessel_i1e expects its parameter to be one of bfloat16,
      half, float, double. So, the data type of ''x'' needs to be corrected to avoid
      this error. The condition to prevent this error is represented as follows:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
      msg: "Value for attr 'T' of int32 is not in the list of allowed values: bfloat16,\
        \ half, float, double\n\t; NodeDef: {{node BesselI1e}}; Op<name=BesselI1e;\
        \ signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT,\
        \ DT_DOUBLE]> [Op:BesselI1e]"
      package: tensorflow
    txt: dtype(x) in ["bfloat16", "half", "float", "double"]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
      msg: negative dimensions are not allowed
      package: null
    txt: all(i >= 0 for i in x.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
      msg: Too large tensor shape
      package: null
    txt: x.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
