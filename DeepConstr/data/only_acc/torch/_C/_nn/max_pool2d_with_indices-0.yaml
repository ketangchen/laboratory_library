args:
  dtype:
  - Tensor
  - List[int]
  - List[int]
  - List[int]
  - List[int]
  - bool
  is_pos:
  - true
  - false
  - false
  - false
  - false
  - false
  name:
  - self
  - kernel_size
  - stride
  - padding
  - dilation
  - ceil_mode
  required:
  - true
  - true
  - false
  - false
  - false
  - false
name: torch._C._nn.max_pool2d_with_indices
package: torch
pass_rate: 0.5128205128205128
rules:
- - cot: synthesized
    length: 5
    target:
      choosen_dtype:
        ceil_mode: bool
        dilation: list[int]
        kernel_size: list[int]
        padding: list[int]
        self: tensor
        stride: list[int]
      msg: 'max_pool2d: kernel_size must either be a single int, or a tuple of two
        ints'
      package: torch
    txt: (((len(dilation) == 2) and (len(kernel_size) == 1 or len(kernel_size) ==
      2)) or (len(padding) == 2)) and ((len(kernel_size) == 2) and (len(dilation)
      == 1))
  - f1_score: 98.7146529562982
    overall_score: 49.33096446700508
    precision: 97.46192893401016
    recall: 100.0
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        ceil_mode: bool
        dilation: list[int]
        kernel_size: list[int]
        padding: list[int]
        self: tensor
        stride: list[int]
      msg: non-empty 3D or 4D (batch mode) tensor expected for input
      package: torch
    txt: len(self.shape) in [3, 4]
  - f1_score: 96.7741935483871
    overall_score: 100
    precision: 100.0
    recall: 93.75
- - cot: default
    length: 1
    target:
      choosen_dtype:
        ceil_mode: bool
        dilation: List[int]
        kernel_size: List[int]
        padding: List[int]
        self: Tensor
        stride: List[int]
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        ceil_mode: bool
        dilation: List[int]
        kernel_size: List[int]
        padding: List[int]
        self: Tensor
        stride: List[int]
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        ceil_mode: bool
        dilation: List[int]
        kernel_size: List[int]
        padding: List[int]
        self: Tensor
        stride: List[int]
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        ceil_mode: bool
        dilation: List[int]
        kernel_size: List[int]
        padding: List[int]
        self: Tensor
        stride: List[int]
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
