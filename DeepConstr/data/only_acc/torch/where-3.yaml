args:
  dtype:
  - Tensor
  - number
  - number
  is_pos:
  - false
  - true
  - false
  name:
  - condition
  - self
  - other
  required:
  - true
  - true
  - true
error: <class 'TypeError'>
name: torch.where
package: torch
pass_rate: 0
rules:
- - cot: default
    length: 1
    target:
      choosen_dtype:
        condition: Tensor
        other: number
        self: number
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in condition.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        condition: Tensor
        other: number
        self: number
      msg: Too large tensor shape
      package: torch
    txt: condition.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        condition: Tensor
        other: number
        self: number
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in condition.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        condition: Tensor
        other: number
        self: number
      msg: Too large tensor shape
      package: torch
    txt: condition.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
