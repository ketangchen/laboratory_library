args:
  dtype:
  - Tensor
  - int
  - int
  - int
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - offset
  - dim1
  - dim2
  required:
  - true
  - false
  - false
  - false
name: torch.Tensor.diagonal
package: torch
pass_rate: 6.0
rules:
- - cot: ''
    target:
      choosen_dtype:
        dim1: int
        dim2: int
        offset: int
        self: tensor
      msg: Dimension out of range (expected to be in range of [-1, 0], but got 51)
      package: torch
    txt: dim1 >= -len(self.shape) and dim1 < len(self.shape) and dim2 >= -len(self.shape)
      and dim2 < len(self.shape)
  - f1_score: 96.3172804532578
    overall_score: 100
    precision: 100.0
    recall: 92.89617486338798
- - cot: diagonal dimensions cannot be identical -1, 0
    length: 1
    target:
      choosen_dtype:
        dim1: int
        dim2: int
        offset: int
        self: tensor
      msg: diagonal dimensions cannot be identical -1, 0
      package: torch
    txt: dim1 != dim2
  - f1_score: 93.07535641547862
    overall_score: 48.7
    precision: 91.4
    recall: 94.81327800829875
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        dim1: int
        dim2: int
        offset: int
        self: tensor
      msg: 'Too large tensor shape: shape = [9, 9, 9, 9, 9, 9, 9, 9, 9]'
      package: torch
    txt: (self.shape[dim1] <= 8 and self.shape[dim2] <= 8) and (len(self.shape) <
      9)
  - f1_score: 67.70480704129993
    overall_score: 100
    precision: 100.0
    recall: 51.17707267144319
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim1: int
        dim2: int
        offset: int
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim1: int
        dim2: int
        offset: int
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
