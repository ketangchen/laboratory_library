args:
  dtype:
  - Tensor
  - Optional[List[int]]
  - Optional[number]
  - bool
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  - false
  - false
  name:
  - self
  - dim
  - correction
  - keepdim
  - out0
  - out1
  required:
  - true
  - false
  - false
  - false
  - true
  - true
error: <class 'TypeError'>
name: torch.std_mean
package: torch
pass_rate: 0
rules:
- - cot: default
    length: 3
    target:
      choosen_dtype:
        correction: Optional[number]
        dim: Optional[List[int]]
        keepdim: bool
        out0: Tensor
        out1: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out0.shape) and all(i
      >= 0 for i in out1.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 3
    target:
      choosen_dtype:
        correction: Optional[number]
        dim: Optional[List[int]]
        keepdim: bool
        out0: Tensor
        out1: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out0.rank <= 7 and out1.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
