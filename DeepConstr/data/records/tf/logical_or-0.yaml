args:
  dtype:
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.logical_or
package: tensorflow
pass_rate: 100
rules:
- - cot: Based on the given error message and runtime information, the error is caused
      by negative dimensions in either tensor x or y. To prevent the error, we can
      add a constraint to check that all dimensions in x and y are non-negative.
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(d >= 0 for d in x.shape) and all(d >= 0 for d in y.shape)
  - f1_score: 73.6318407960199
    overall_score: 48.81592039800995
    precision: 98.66666666666667
    recall: 58.73015873015872
- - cot: 'The error is caused because the shapes of x and y are inconsistent. In tf.logical_or
      operation, the shapes of tensors x and y need to be the same. Therefore, the
      constraint should be that the shape of ''''x'''' should be equal to the shape
      of ''''y''''. Therefore, the constraint can be formulated as follows:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__LogicalOr_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [7,2,2,5,4,5,5] vs. [2,7,7,7,7,7,7] [Op:LogicalOr] name:
        TQAA'
      package: tensorflow
    txt: x.shape == y.shape
  - f1_score: 98.36065573770492
    overall_score: 61.18032786885246
    precision: 100.0
    recall: 96.77419354838709
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute LogicalOr as input #0(zero-based) was expected to be a
        bool tensor but is a float tensor [Op:LogicalOr] name: PFdW'
      package: tensorflow
    txt: (dtype(x) == dtype(y)) and (dtype(x) == tf.bool)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
