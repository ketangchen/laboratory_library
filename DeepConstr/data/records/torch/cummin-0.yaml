args:
  dtype:
  - Tensor
  - int
  is_pos:
  - true
  - false
  name:
  - self
  - dim
  required:
  - true
  - true
name: torch.cummin
package: torch
pass_rate: 100
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: tensor
      msg: Dimension out of range (expected to be in range of [-7, 6], but got 8)
      package: torch
    txt: dim < len(self.shape)
  - f1_score: 58.32290362953692
    overall_score: 41.161451814768455
    precision: 77.66666666666666
    recall: 46.69338677354709
- - cot: "The error occurred because the dimension provided is out of the valid range.\
      \ The shape of the tensor is [3, 3, 3, 3, 3, 3, 3], so the valid range for the\
      \ dimension would be [-7, 6]. To prevent this error in the future, we need to\
      \ ensure that the \"dim\" value is always within the valid range for the given\
      \ tensor. \n\nThe constraint for the 'dim' parameter can be expressed as:"
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: tensor
      msg: Dimension out of range (expected to be in range of [-7, 6], but got 9)
      package: torch
    txt: -7 <= dim < 7
  - f1_score: 76.33587786259541
    overall_score: 50.167938931297705
    precision: 100.0
    recall: 61.72839506172839
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
