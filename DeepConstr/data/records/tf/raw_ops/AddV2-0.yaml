args:
  dtype:
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.raw_ops.AddV2
package: tensorflow
pass_rate: 100
rules:
- - cot: 'Based on the given runtime information, the error occurs because the function
      is trying to perform an addition operation on an int32 tensor and a float tensor.
      However, both tensors must have the same data type. Therefore, the constraint
      to prevent the error is:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute AddV2 as input #1(zero-based) was expected to be a int32
        tensor but is a float tensor [Op:AddV2] name: bhxs'
      package: tensorflow
    txt: dtype(y) == dtype(x)
  - f1_score: 94.33962264150942
    overall_score: 59.16981132075471
    precision: 100.0
    recall: 89.28571428571428
- - cot: 'The error is caused by negative dimensions in the shape of y. To prevent
      this error, the dimensions of y should be non-negative. The constraint can be
      formulated as follows:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(y.shape[i] >= 0 for i in range(y.rank))
  - f1_score: 79.90970654627539
    overall_score: 51.954853273137694
    precision: 88.5
    recall: 72.83950617283949
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__AddV2_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [5,3,1,8,9,9,8] vs. [8,8,8,8,8,8,8] [Op:AddV2] name:
        gTog'
      package: tensorflow
    txt: (x.shape == y.shape) and (x.shape[i] == 1)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
