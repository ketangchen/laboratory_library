args:
  dtype:
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  - false
  name:
  - a
  - b
  - name
  - x
  required:
  - true
  - true
  - false
  - true
name: tf.raw_ops.Betainc
package: tensorflow
pass_rate: 43.93939393939394
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        a: tensor
        b: tensor
        name: str
        x: tensor
      msg: '{{function_node __wrapped__Betainc_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Shapes of a and b are inconsistent: [9,9] vs. [1,9,9,9] [Op:Betainc] name:
        elxH'
      package: tensorflow
    txt: (len(b) == len(x)) and (all(b.shape[i] == x.shape[i] for i in range(b.rank)))
  - f1_score: 91.90476190476191
    overall_score: 49.75
    precision: 96.5
    recall: 87.72727272727272
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        a: tensor
        b: tensor
        name: str
        x: tensor
      msg: "Value for attr 'T' of int32 is not in the list of allowed values: float,\
        \ double\n\t; NodeDef: {{node Betainc}}; Op<name=Betainc; signature=a:T, b:T,\
        \ x:T -> z:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE]> [Op:Betainc] name:\
        \ VBEu"
      package: tensorflow
    txt: dtype(x) in ["float", "double"]
  - f1_score: 66.44407345575961
    overall_score: 51.75
    precision: 97.5
    recall: 50.392831634309466
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        a: tensor
        b: tensor
        name: str
        x: tensor
      msg: 'cannot compute Betainc as input #2(zero-based) was expected to be a float
        tensor but is a int32 tensor [Op:Betainc] name: GGlo'
      package: tensorflow
    txt: (dtype(b) == dtype(a)) and (dtype(x) == dtype(a))
  - f1_score: 85.34482758620689
    overall_score: 100
    precision: 100.0
    recall: 74.43609022556392
- - cot: default
    length: 3
    target:
      choosen_dtype:
        a: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        b: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in a.shape) and all(i >= 0 for i in b.shape) and all(i >=
      0 for i in x.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 3
    target:
      choosen_dtype:
        a: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        b: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: a.rank <= 7 and b.rank <= 7 and x.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
