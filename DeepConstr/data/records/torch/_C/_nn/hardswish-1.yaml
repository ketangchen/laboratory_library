args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - out
  required:
  - true
  - true
name: torch._C._nn.hardswish
package: torch
pass_rate: 92.0
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.rank == self.rank and all(out.shape[i] == self.shape[i] for i in range(out.rank))
  - f1_score: 74.87520798668885
    overall_score: 100
    precision: 100.0
    recall: 59.84042553191489
- - cot: 'The constraint to prevent the error is:'
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: Found dtype Float but expected Int
      package: torch
    txt: dtype(self) == dtype(out)
  - f1_score: 99.88901220865705
    overall_score: 100
    precision: 100.0
    recall: 99.77827050997784
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: '"hardswish_cpu" not implemented for ''Int'''
      package: torch
    txt: out.dtype != torch.int
  - f1_score: 99.55752212389382
    overall_score: 100
    precision: 100.0
    recall: 99.11894273127753
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: '"hardswish_cpu" not implemented for ''Long'''
      package: torch
    txt: out.dtype != 'Long'
  - f1_score: 99.4475138121547
    overall_score: 100
    precision: 100.0
    recall: 98.9010989010989
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: '"hardswish_cpu" not implemented for ''Bool'''
      package: torch
    txt: out.dtype != 'Bool'
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
