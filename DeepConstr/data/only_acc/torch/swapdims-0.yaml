args:
  dtype:
  - Tensor
  - int
  - int
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - dim0
  - dim1
  required:
  - true
  - true
  - true
name: torch.swapdims
package: torch
pass_rate: 71.66666666666667
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim0: int
        dim1: int
        self: tensor
      msg: Dimension out of range (expected to be in range of [-3, 2], but got 8)
      package: torch
    txt: dim0 >= -len(self.shape) and dim0 < len(self.shape) and dim1 >= -len(self.shape)
      and dim1 < len(self.shape)
  - f1_score: 74.35064935064936
    overall_score: 41.166666666666664
    precision: 76.33333333333333
    recall: 72.46835443037976
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim0: int
        dim1: int
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim0: int
        dim1: int
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
