args:
  dtype:
  - Tensor
  - number
  - Optional[str]
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - other
  - rounding_mode
  required:
  - true
  - true
  - false
name: torch.div
package: torch
pass_rate: 100
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        other: int
        rounding_mode: str
        self: tensor
      msg: div expected rounding_mode to be one of None, 'trunc', or 'floor' but found
        'LWOo'
      package: torch
    txt: rounding_mode in [None, 'trunc', 'floor']
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        other: int
        rounding_mode: None
        self: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: (dtype(out) == int32) and (dtype(self) == Int)
  - f1_score: 67.79661016949153
    overall_score: 100
    precision: 100.0
    recall: 51.28205128205129
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        other: int
        rounding_mode: str
        self: tensor
      msg: ZeroDivisionError
      package: torch
    txt: (all(self.shape[i] != 0 for i in range(len(self.shape)))) and (other != 0)
  - f1_score: 92.01877934272301
    overall_score: 100
    precision: 100.0
    recall: 85.21739130434783
- - cot: default
    length: 1
    target:
      choosen_dtype:
        other: number
        rounding_mode: Optional[str]
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        other: number
        rounding_mode: Optional[str]
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
