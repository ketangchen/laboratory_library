args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - out
  required:
  - true
  - true
name: torch.sqrt
package: torch
pass_rate: 100
rules:
- - cot: "The error is caused because the shape of the output tensor is [7, 5, -1,\
      \ -1, -1, -1, -1], which contains negative dimensions. Negative dimensions are\
      \ not allowed. To prevent this error, the shape of the output tensor should\
      \ not contain any negative dimensions. \n\nWrap the final formula with"
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(dim >= 0 for dim in out.shape)
  - f1_score: 95.98715890850724
    overall_score: 100
    precision: 100.0
    recall: 92.28395061728396
- - cot: "The error is triggered because the result of the torch.sqrt operation is\
      \ a float, which cannot be cast to an integer as defined by the \"out\" tensor.\
      \ To prevent this error, the dtype of the \"out\" tensor should be changed to\
      \ float. \n\nLeft : dtype(out), op : ==, comparator : float"
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: dtype(out)==float
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.rank == self.rank and all(out.shape[i] == self.shape[i] for i in range(out.rank))
  - f1_score: 72.11538461538463
    overall_score: 48.057692307692314
    precision: 100.0
    recall: 56.390977443609025
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
