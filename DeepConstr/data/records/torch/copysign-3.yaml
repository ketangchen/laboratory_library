args:
  dtype:
  - Tensor
  - number
  - Tensor
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - other
  - out
  required:
  - true
  - true
  - true
name: torch.copysign
package: torch
pass_rate: 100
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        other: int
        out: tensor
        self: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: (dtype(self)==dtype(out)) and (dtype(self) == float32)
  - f1_score: 93.10924369747897
    overall_score: 58.55462184873949
    precision: 92.33333333333333
    recall: 93.89830508474576
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        other: int
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: (out.rank == self.rank) and (all(self.shape[i]==out.shape[i] for i in range(self.rank)))
  - f1_score: 78.58117326057298
    overall_score: 51.29058663028649
    precision: 96.0
    recall: 66.51270207852194
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: number
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: number
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
