args:
  dtype:
  - Tensor
  - Tensor
  - Optional[int]
  - Optional[float]
  - float
  - bool
  - bool
  is_pos:
  - false
  - false
  - false
  - false
  - false
  - false
  - false
  name:
  - input
  - weight
  - padding_idx
  - max_norm
  - norm_type
  - scale_grad_by_freq
  - sparse
  required:
  - true
  - true
  - false
  - false
  - false
  - false
  - false
name: torch.nn.functional.embedding
package: torch
pass_rate: 0.0
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        input: tensor
        max_norm: float
        norm_type: float
        padding_idx: None
        scale_grad_by_freq: bool
        sparse: bool
        weight: tensor
      msg: 'Expected 2-dimensional tensor, but got 4-dimensional tensor for argument
        #1 ''self'' (while checking arguments for embedding_renorm_)'
      package: torch
    txt: (input.ndim() == 2) and (weight.ndims() == 2)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        input: tensor
        max_norm: float
        norm_type: float
        padding_idx: int
        scale_grad_by_freq: bool
        sparse: bool
        weight: tensor
      msg: Padding_idx must be within num_embeddings
      package: torch
    txt: (padding_idx >= 0) and (padding_idx < weight.size(0))
  - f1_score: 72.02881152460985
    overall_score: 100
    precision: 100.0
    recall: 56.28517823639775
