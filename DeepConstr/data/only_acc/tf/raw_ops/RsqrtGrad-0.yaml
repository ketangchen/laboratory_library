args:
  dtype:
  - bfloat16,float16,float32,float64,complex64,complex128
  - str
  - bfloat16,float16,float32,float64,complex64,complex128
  is_pos:
  - false
  - false
  - false
  name:
  - dy
  - name
  - y
  required:
  - true
  - false
  - true
name: tf.raw_ops.RsqrtGrad
package: tensorflow
pass_rate: 26.0
rules:
- - cot: The error is triggered because the number of elements in the two input tensors
      (`dy` and `y`) does not match. The `dy` tensor has 25 elements, while the `y`
      tensor has 36 elements. To prevent this error, the number of elements in both
      tensors should be the same.
    length: 1
    target:
      choosen_dtype:
        dy: tensor
        name: str
        y: tensor
      msg: '{{function_node __wrapped__RsqrtGrad_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        The two arguments to a cwise op must have same number of elements, got 210000
        and 2401 [Op:RsqrtGrad] name: RaIn'
      package: tensorflow
    txt: (size(dy) == size(y))
  - f1_score: 35.07109004739336
    overall_score: 14.1
    precision: 22.2
    recall: 83.45864661654136
- - cot: 'Based on the given runtime information, the constraint that prevents the
      error is:'
    length: 1
    target:
      choosen_dtype:
        dy: tensor
        name: str
        y: tensor
      msg: 'cannot compute RsqrtGrad as input #1(zero-based) was expected to be a
        float tensor but is a int32 tensor [Op:RsqrtGrad] name: oxfN'
      package: tensorflow
    txt: dtype(dy) == dtype(y)
  - f1_score: 68.30601092896175
    overall_score: 100
    precision: 100.0
    recall: 51.867219917012456
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dy: tensor
        name: str
        y: tensor
      msg: "Value for attr 'T' of int32 is not in the list of allowed values: bfloat16,\
        \ half, float, double, complex64, complex128\n\t; NodeDef: {{node RsqrtGrad}};\
        \ Op<name=RsqrtGrad; signature=y:T, dy:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16,\
        \ DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]> [Op:RsqrtGrad]\
        \ name: trDP"
      package: tensorflow
    txt: dtype(y) in ["bfloat16", "half", "float", "double", "complex64", "complex128"]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dy: bfloat16,float16,float32,float64,complex64,complex128
        name: str
        y: bfloat16,float16,float32,float64,complex64,complex128
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in dy.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dy: bfloat16,float16,float32,float64,complex64,complex128
        name: str
        y: bfloat16,float16,float32,float64,complex64,complex128
      msg: Too large tensor shape
      package: tensorflow
    txt: dy.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
