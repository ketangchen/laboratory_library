args:
  dtype:
  - Tensor
  - int
  is_pos:
  - true
  - false
  name:
  - self
  - dim
  required:
  - true
  - true
name: torch.Tensor.cummin
package: torch
pass_rate: 10.196078431372548
rules:
- - cot: "The error occurs because the dimension provided is out of the valid range.\
      \ The valid range for the dimension would be [-n, n-1], where n is the length\
      \ of the tensor along that dimension. In this case, the tensor has a length\
      \ of 3, so the valid range for the dimension is [-3, 2]. \n\nTo prevent this\
      \ error in the future and generate constraints that do not trigger it, we need\
      \ to ensure that the \"dim\" value is always within the valid range for the\
      \ given tensor. The constraint for the 'dim' parameter can be expressed as:"
    target:
      choosen_dtype:
        dim: int
        self: tensor
      msg: Dimension out of range (expected to be in range of [-1, 0], but got 75)
      package: torch
    txt: -3 <= dim < 3
  - f1_score: 66.66666666666667
    overall_score: 100
    precision: 100.0
    recall: 50.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
