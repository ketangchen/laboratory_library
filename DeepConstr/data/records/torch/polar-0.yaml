args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - false
  - false
  name:
  - abs
  - angle
  required:
  - true
  - true
name: torch.polar
package: torch
pass_rate: 0.0
rules:
- - cot: 'Error is triggered because the size of tensor a (5) must match the size
      of tensor b (9) at non-singleton dimension 6. The args were abs=Tensor<f32>[3,
      7, 8, 2, 9, 7, 5] and angle=Tensor<f32>[9, 9, 9, 9, 9, 9, 9]. Therefore, we
      can formulate the constraint as follows:'
    length: 1
    target:
      choosen_dtype:
        abs: tensor
        angle: tensor
      msg: The size of tensor a (6) must match the size of tensor b (7) at non-singleton
        dimension 3
      package: torch
    txt: abs.shape[6] == angle.shape[6]
  - f1_score: 74.21150278293136
    overall_score: 100
    precision: 100.0
    recall: 58.99705014749264
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        abs: tensor
        angle: tensor
      msg: Expected both inputs to be Half, Float or Double tensors but got Int and
        Float
      package: torch
    txt: (abs.dtype == angle.dtype) and (dtype(abs) == Half)
  - f1_score: 68.61063464837049
    overall_score: 100
    precision: 100.0
    recall: 52.21932114882506
