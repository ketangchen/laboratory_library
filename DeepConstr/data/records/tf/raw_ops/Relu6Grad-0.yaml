args:
  dtype:
  - float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
  - float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
  - str
  is_pos:
  - false
  - false
  - false
  name:
  - features
  - gradients
  - name
  required:
  - true
  - true
  - false
name: tf.raw_ops.Relu6Grad
package: tensorflow
pass_rate: 100
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        features: tensor
        gradients: tensor
        name: str
      msg: 'cannot compute Relu6Grad as input #1(zero-based) was expected to be a
        int32 tensor but is a float tensor [Op:Relu6Grad] name: hqay'
      package: tensorflow
    txt: (dtype(gradients) == float) and (dtype(gradients) == dtype(features))
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'Error is triggered because the two tensors have different sizes and shapes.
      Let''s see what the args were. It seems the dimensions and shapes of features
      and gradients are inconsistent. Therefore, we can formulate the constraint as
      follows:'
    length: 1
    target:
      choosen_dtype:
        features: tensor
        gradients: tensor
        name: str
      msg: '{{function_node __wrapped__Relu6Grad_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Inputs to operation Relu6Grad of type Relu6Grad must have the same size and
        shape.  Input 0: [7,5,3,5,5,5] != input 1: [8,3,5,3] [Op:Relu6Grad] name:
        ZOLz'
      package: tensorflow
    txt: features.dim == gradients.dim and features.shape == gradients.shape
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        features: float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
        gradients: float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
        name: str
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in features.shape) and all(i >= 0 for i in gradients.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        features: float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
        gradients: float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
        name: str
      msg: Too large tensor shape
      package: tensorflow
    txt: features.rank <= 7 and gradients.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
