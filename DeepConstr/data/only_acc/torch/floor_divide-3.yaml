args:
  dtype:
  - Tensor
  - number
  is_pos:
  - true
  - false
  name:
  - self
  - other
  required:
  - true
  - true
name: torch.floor_divide
package: torch
pass_rate: 100
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        other: int
        self: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: dtype(self) == int32
  - f1_score: 67.41573033707866
    overall_score: 100
    precision: 100.0
    recall: 50.847457627118644
- - cot: 'The error is caused by the fact that the function is trying to divide by
      zero, which is not allowed in mathematics. Therefore, the constraint that would
      prevent this error is to ensure that the `other` argument is not zero. So, Left
      : other, Op : !=, and Right : 0'
    length: 1
    target:
      choosen_dtype:
        other: int
        self: tensor
      msg: ZeroDivisionError
      package: torch
    txt: other != 0
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        other: number
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        other: number
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
