args:
  dtype:
  - Tensor
  - List[int]
  is_pos:
  - true
  - false
  name:
  - self
  - dim
  required:
  - true
  - true
name: torch.Tensor.count_nonzero
package: torch
pass_rate: 45.800000000000004
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: list[int]
        self: tensor
      msg: Dimension out of range (expected to be in range of [-4, 3], but got 5)
      package: torch
    txt: all(d >= -len(self.shape) and d < len(self.shape) for d in dim)
  - f1_score: 89.6626768226333
    overall_score: 56.83133841131665
    precision: 82.39999999999999
    recall: 98.32935560859188
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: List[int]
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: List[int]
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
