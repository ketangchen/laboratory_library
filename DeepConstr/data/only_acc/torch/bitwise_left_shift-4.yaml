args:
  dtype:
  - Tensor
  - number
  is_pos:
  - true
  - false
  name:
  - self
  - other
  required:
  - true
  - true
name: torch.bitwise_left_shift
package: torch
pass_rate: 100
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        other: int
        self: tensor
      msg: '"lshift_cpu" not implemented for ''Float'''
      package: torch
    txt: dtype(self) in ["half", "int16", "int32", "int64", "uint8", "uint16", "uint32",
      "uint64"]
  - f1_score: 88.36524300441828
    overall_score: 100
    precision: 100.0
    recall: 79.155672823219
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        other: int
        self: tensor
      msg: '"lshift_cpu" not implemented for ''Half'''
      package: torch
    txt: dtype(self) in ["int8", "int16", "int32", "int64", "uint8", "uint16", "uint32",
      "uint64"]
  - f1_score: 91.18541033434651
    overall_score: 100
    precision: 100.0
    recall: 83.79888268156425
- - cot: default
    length: 1
    target:
      choosen_dtype:
        other: number
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        other: number
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
