args:
  dtype:
  - Tensor
  - number
  is_pos:
  - true
  - false
  name:
  - self
  - lambd
  required:
  - true
  - false
name: torch.Tensor.hardshrink
package: torch
pass_rate: 98.33333333333333
rules:
- - cot: The error is due to the fact that the function "hardshrink_cpu" is not implemented
      for tensors of type 'Long'. Therefore, to prevent this error, the tensor type
      should be something other than 'Long'.
    length: 1
    target:
      choosen_dtype:
        lambd: int
        self: tensor
      msg: '"hardshrink_cpu" not implemented for ''Long'''
      package: torch
    txt: self.dtype != 'Long'
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: The error is due to the input tensor `self` having a data type of 'Int'.
      The function `torch.Tensor.hardshrink` is not implemented for tensors with data
      type 'Int'. To prevent the error, the input tensor `self` should have a data
      type that is supported by the `hardshrink` function.
    length: 1
    target:
      choosen_dtype:
        lambd: int
        self: tensor
      msg: '"hardshrink_cpu" not implemented for ''Int'''
      package: torch
    txt: self.dtype != torch.int32
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        lambd: number
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        lambd: number
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
