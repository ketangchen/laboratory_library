args:
  dtype:
  - str
  - bfloat16,float16,float32,float64,int8,uint8,int16,uint16,int32,uint32,int64,uint64
  - bfloat16,float16,float32,float64,int8,uint8,int16,uint16,int32,uint32,int64,uint64
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.raw_ops.Maximum
package: tensorflow
pass_rate: 20.0
rules:
- - cot: 'Based on the given runtime information, the error is triggered because the
      function is trying to compute the maximum between a float tensor and an int32
      tensor. However, both tensors in the arguments must have the same data type.


      To prevent the error, we can formulate the constraint as follows:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute Maximum as input #1(zero-based) was expected to be a float
        tensor but is a int32 tensor [Op:Maximum] name: Zekm'
      package: tensorflow
    txt: dtype(y) == dtype(x)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__Maximum_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [9,9,9,9,9,9,9] vs. [7,3,1,8,1,2,2] [Op:Maximum] name:
        ihgx'
      package: tensorflow
    txt: (all(x.shape[i] == y.shape[i] or x.shape[i] == 1 or y.shape[i] == 1 for i
      in range(-1, -min(len(x.shape), len(y.shape))-1, -1))) or (x.shape[i] == 1)
  - f1_score: 96.95431472081219
    overall_score: 60.477157360406096
    precision: 95.5
    recall: 98.45360824742268
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: bfloat16,float16,float32,float64,int8,uint8,int16,uint16,int32,uint32,int64,uint64
        y: bfloat16,float16,float32,float64,int8,uint8,int16,uint16,int32,uint32,int64,uint64
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: bfloat16,float16,float32,float64,int8,uint8,int16,uint16,int32,uint32,int64,uint64
        y: bfloat16,float16,float32,float64,int8,uint8,int16,uint16,int32,uint32,int64,uint64
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
