args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - false
  - false
  name:
  - x
  - n
  required:
  - true
  - true
name: torch._C._special.special_hermite_polynomial_h
package: torch
pass_rate: 99.5
rules:
- - cot: The constraint that prevents the error is
    length: 1
    target:
      choosen_dtype:
        n: tensor
        x: tensor
      msg: The size of tensor a (3) must match the size of tensor b (7) at non-singleton
        dimension 6
      package: torch
    txt: x.shape[2] == n.shape[2]
  - f1_score: 76.04562737642586
    overall_score: 100
    precision: 100.0
    recall: 61.34969325153374
- - cot: synthesized
    length: 3
    target:
      choosen_dtype:
        n: tensor
        x: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: ((out.shape == x.shape) and (out.rank == x.rank)) or (n.rank==x.rank and
      all(n.shape[i]==x.shape[i] for i in range(n.rank)))
  - f1_score: 72.99270072992701
    overall_score: 100
    precision: 100.0
    recall: 57.47126436781609
- - cot: default
    length: 2
    target:
      choosen_dtype:
        n: Tensor
        x: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in n.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        n: Tensor
        x: Tensor
      msg: Too large tensor shape
      package: torch
    txt: x.rank <= 7 and n.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
