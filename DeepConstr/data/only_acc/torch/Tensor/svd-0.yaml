args:
  dtype:
  - Tensor
  - bool
  - bool
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - some
  - compute_uv
  required:
  - true
  - false
  - false
name: torch.Tensor.svd
package: torch
pass_rate: 100
rules:
- - cot: 'Based on the given runtime information, the error is triggered because the
      input tensor has 0 dimensions instead of the required minimum of 2 dimensions.
      To prevent the error, we can formulate the constraint as follows:'
    length: 1
    target:
      choosen_dtype:
        compute_uv: bool
        self: tensor
        some: bool
      msg: 'linalg.svd: input should have at least 2 dimensions, but has 0 dimensions
        instead'
      package: torch
    txt: self.dim >= 2
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'The error is triggered because the function torch.Tensor.svd expects a floating
      point or complex tensor as input, but an integer tensor is provided instead.
      To prevent this error, the input tensor should have a floating point or complex
      data type. Therefore, we can formulate the constraint as follows:'
    length: 1
    target:
      choosen_dtype:
        compute_uv: bool
        self: tensor
        some: bool
      msg: 'linalg.svd: Expected a floating point or complex tensor as input. Got
        Int'
      package: torch
    txt: self.dtype in [torch.float32, torch.float64, torch.complex64, torch.complex128]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        compute_uv: bool
        self: Tensor
        some: bool
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        compute_uv: bool
        self: Tensor
        some: bool
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
