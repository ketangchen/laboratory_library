args:
  dtype:
  - Tensor
  - number
  - Optional[List[int]]
  - bool
  - None
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  - false
  - false
  name:
  - self
  - ord
  - dim
  - keepdim
  - dtype
  - out
  required:
  - true
  - false
  - false
  - false
  - false
  - true
name: torch._C._linalg.linalg_vector_norm
package: torch
pass_rate: 99.0
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: None
        dtype: None
        keepdim: bool
        ord: int
        out: tensor
        self: tensor
      msg: Expected out tensor to have dtype float, but got int instead
      package: torch
    txt: out.dtype == torch.float
  - f1_score: 99.25558312655089
    overall_score: 100
    precision: 100.0
    recall: 98.52216748768474
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: None
        dtype: None
        keepdim: bool
        ord: int
        out: tensor
        self: tensor
      msg: 'linalg.vector_norm: Expected a floating point or complex tensor as input.
        Got Int'
      package: torch
    txt: dtype(self) == float32
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: None
        dtype: None
        keepdim: bool
        ord: int
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: all(out.shape[i] == self.shape[i] for i in range(out.rank))
  - f1_score: 67.00167504187604
    overall_score: 100
    precision: 100.0
    recall: 50.377833753148614
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        dim: None
        dtype: None
        keepdim: bool
        ord: int
        out: tensor
        self: tensor
      msg: linalg.vector_norm cannot compute the -1 norm on an empty tensor because
        the operation does not have an identity
      package: torch
    txt: (self.size(0) > 0) and (ord != -1)
  - f1_score: 67.00167504187604
    overall_score: 100
    precision: 100.0
    recall: 50.377833753148614
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: Optional[List[int]]
        dtype: None
        keepdim: bool
        ord: number
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: Optional[List[int]]
        dtype: None
        keepdim: bool
        ord: number
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
