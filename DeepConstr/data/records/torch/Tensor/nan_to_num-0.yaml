args:
  dtype:
  - Tensor
  - Optional[float]
  - Optional[float]
  - Optional[float]
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - nan
  - posinf
  - neginf
  required:
  - true
  - false
  - false
  - false
name: torch.Tensor.nan_to_num
package: torch
pass_rate: 100
rules:
- - cot: default
    length: 1
    target:
      choosen_dtype:
        nan: Optional[float]
        neginf: Optional[float]
        posinf: Optional[float]
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        nan: Optional[float]
        neginf: Optional[float]
        posinf: Optional[float]
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
