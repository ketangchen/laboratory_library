args:
  dtype:
  - tensor
  - tensor
  is_pos:
  - true
  - true
  name:
  - x1
  - x2
  required:
  - true
  - true
name: numpy.add
package: null
pass_rate: 2.3333333333333335
rules:
- - cot: 'operands could not be broadcast together with shapes (4,6,5,2,1,6,6) (2,1,2,3,2,5,1).
      What the args were? The shapes of x1 and x2 are (4,6,5,2,1,6,6) and (2,1,2,3,2,5,1)
      respectively. To prevent the error, the shapes of x1 and x2 should be broadcastable.
      Broadcasting requires that the trailing dimensions of the tensors are either
      1 or the same. So, the constraint should be that for each dimension starting
      from the last, the size of the dimension in x1 should be equal to the size of
      the dimension in x2 or one of them should be 1. We start from the last dimension
      because broadcasting aligns dimensions from the end. Therefore, the constraint
      to prevent the error is:'
    length: 1
    target:
      choosen_dtype:
        x1: tensor
        x2: tensor
      msg: 'operands could not be broadcast together with shapes (4,6,5,2,1,6,6) (2,1,2,3,2,5,1) '
      package: numpy
    txt: all(x1.shape[i] == x2.shape[i] or x1.shape[i] == 1 or x2.shape[i] == 1 for
      i in range(-1, -min(len(x1.shape), len(x2.shape))-1, -1))
  - f1_score: 92.96740994854203
    overall_score: 48.166666666666664
    precision: 90.33333333333333
    recall: 95.75971731448763
- - cot: default
    length: 2
    target:
      choosen_dtype:
        x1: tensor
        x2: tensor
      msg: negative dimensions are not allowed
      package: null
    txt: all(i >= 0 for i in x1.shape) and all(i >= 0 for i in x2.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        x1: tensor
        x2: tensor
      msg: Too large tensor shape
      package: null
    txt: x1.rank <= 7 and x2.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        x1: tensor
        x2: tensor
      msg: negative dimensions are not allowed
      package: null
    txt: all(i >= 0 for i in x1.shape) and all(i >= 0 for i in x2.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        x1: tensor
        x2: tensor
      msg: Too large tensor shape
      package: null
    txt: x1.rank <= 7 and x2.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
