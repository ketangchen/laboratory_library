args:
  dtype:
  - Tensor
  - Tensor
  - bool
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - rcond
  - hermitian
  required:
  - true
  - true
  - false
name: torch._C._linalg.linalg_pinv
package: torch
pass_rate: 99.27797833935018
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        hermitian: bool
        rcond: tensor
        self: tensor
      msg: The size of tensor a (9) must match the size of tensor b (8) at non-singleton
        dimension 6
      package: torch
    txt: rcond.shape[4] == 1
  - f1_score: 84.03361344537817
    overall_score: 100
    precision: 100.0
    recall: 72.46376811594205
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        hermitian: bool
        rcond: tensor
        self: tensor
      msg: 'linalg.pinv(Float{[]}): expected a tensor with 2 or more dimensions of
        float, double, cfloat or cdouble types'
      package: torch
    txt: self.dtype == cdouble
  - f1_score: 95.22292993630575
    overall_score: 100
    precision: 100.0
    recall: 90.88145896656535
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        hermitian: bool
        rcond: tensor
        self: tensor
      msg: 'linalg.pinv(ComplexDouble{[]}): expected a tensor with 2 or more dimensions
        of float, double, cfloat or cdouble types'
      package: torch
    txt: self.ndim >= 2
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        hermitian: bool
        rcond: tensor
        self: tensor
      msg: 'linalg.eigh: A must be batches of square matrices, but they are 9 by 1
        matrices'
      package: torch
    txt: (self.shape[-1] == self.shape[-2])
  - f1_score: 80.0
    overall_score: 100
    precision: 100.0
    recall: 66.66666666666666
- - cot: "Based on the given runtime information, the error is caused by negative\
      \ dimensions in the input tensors. To prevent the error, the dimensions of the\
      \ input tensors should be non-negative. \n\nThe constraint that prevents the\
      \ error is:"
    length: 1
    target:
      choosen_dtype:
        hermitian: bool
        rcond: tensor
        self: tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(dim >= 0 for dim in self.shape)
  - f1_score: 89.06560636182903
    overall_score: 100
    precision: 100.0
    recall: 80.28673835125448
- - cot: default
    length: 2
    target:
      choosen_dtype:
        hermitian: bool
        rcond: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in rcond.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        hermitian: bool
        rcond: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and rcond.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
