args:
  dtype:
  - complex64,complex128
  - str
  is_pos:
  - false
  - false
  name:
  - input
  - name
  required:
  - true
  - false
name: tf.raw_ops.Imag
package: tensorflow
pass_rate: 97.33333333333334
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        input: tensor
        name: str
      msg: "Could not find device for node: {{node Imag}} = Imag[T=DT_COMPLEX128,\
        \ Tout=DT_FLOAT]\nAll kernels registered for op Imag:\n  device='XLA_CPU_JIT';\
        \ Tout in [DT_FLOAT, DT_DOUBLE]; T in [DT_COMPLEX64, DT_COMPLEX128]\n  device='XLA_GPU_JIT';\
        \ Tout in [DT_FLOAT, DT_DOUBLE]; T in [DT_COMPLEX64, DT_COMPLEX128]\n  device='GPU';\
        \ T in [DT_COMPLEX128]; Tout in [DT_DOUBLE]\n  device='GPU'; T in [DT_COMPLEX64];\
        \ Tout in [DT_FLOAT]\n  device='CPU'; T in [DT_COMPLEX128]; Tout in [DT_DOUBLE]\n\
        \  device='CPU'; T in [DT_COMPLEX64]; Tout in [DT_FLOAT]\n [Op:Imag] name:\
        \ zJvk"
      package: tensorflow
    txt: len(input) > 0
  - f1_score: 98.98989898989899
    overall_score: 61.494949494949495
    precision: 98.0
    recall: 100.0
- - cot: 'Based on the given runtime information, the error occurs because the attribute
      ''T'' is expected to be one of the allowed values: complex64, complex128, but
      the value provided is float. Therefore, the constraint to prevent the error
      is:'
    length: 1
    target:
      choosen_dtype:
        input: tensor
        name: str
      msg: "Value for attr 'T' of float is not in the list of allowed values: complex64,\
        \ complex128\n\t; NodeDef: {{node Imag}}; Op<name=Imag; signature=input:T\
        \ -> output:Tout; attr=T:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64,\
        \ DT_COMPLEX128]; attr=Tout:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>\
        \ [Op:Imag] name: BDyb"
      package: tensorflow
    txt: dtype(input) in ["complex64", "complex128"]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        input: complex64,complex128
        name: str
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in input.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        input: complex64,complex128
        name: str
      msg: Too large tensor shape
      package: tensorflow
    txt: input.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
