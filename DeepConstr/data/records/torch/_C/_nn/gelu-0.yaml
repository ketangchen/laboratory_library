args:
  dtype:
  - Tensor
  - str
  is_pos:
  - true
  - false
  name:
  - self
  - approximate
  required:
  - true
  - false
name: torch._C._nn.gelu
package: torch
pass_rate: 96.5
rules:
- - cot: 'The error is due to the input tensor ''self'' being of type ''Int'', but
      the GeluKernelImpl function in the torch._C._nn.gelu module does not support
      ''Int'' data type. Therefore, the data type of ''self'' tensor should be changed
      to a type supported by GeluKernelImpl, such as ''Float''. So, Left : self.dtype,
      Op : !=, Right : torch.int32'
    length: 1
    target:
      choosen_dtype:
        approximate: str
        self: tensor
      msg: '"GeluKernelImpl" not implemented for ''Int'''
      package: torch
    txt: self.dtype != torch.int32
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        approximate: str
        self: tensor
      msg: approximate argument must be either none or tanh.
      package: torch
    txt: approximate == tanh
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        approximate: str
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        approximate: str
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
