args:
  dtype:
  - number
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - other
  - out
  required:
  - true
  - true
  - true
name: torch.xlogy
package: torch
pass_rate: 100
rules:
- - cot: 'The error is caused because the result type Float cannot be cast to the
      Int. Looking at the arguments, the ''out'' tensor is of type Int, while the
      function torch.xlogy is trying to return a Float. Therefore, the dtype of ''out''
      should be the same as the expected output dtype. Let''s formulate the condition
      as follows, Left : dtype(out), Op : ==, Right : float'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: int
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: dtype(out)==float
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: int
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: (out.shape == other.shape) and (out.rank == other.rank)
  - f1_score: 92.16589861751153
    overall_score: 52.082949308755765
    precision: 100.0
    recall: 85.47008547008548
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        out: Tensor
        self: number
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in other.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        out: Tensor
        self: number
      msg: Too large tensor shape
      package: torch
    txt: other.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
