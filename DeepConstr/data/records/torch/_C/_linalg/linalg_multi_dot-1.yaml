args:
  dtype:
  - List[Tensor]
  - Tensor
  is_pos:
  - true
  - false
  name:
  - tensors
  - out
  required:
  - true
  - true
name: torch._C._linalg.linalg_multi_dot
package: torch
pass_rate: 0.0
rules:
- - cot: "The error occurs because the function `torch._C._linalg.linalg_multi_dot`\
      \ expects at least 2 tensors, but it received 0 tensors. \n\nTo prevent this\
      \ error in the future and generate constraints that do not trigger it, we need\
      \ to ensure that the number of tensors passed to the function is always greater\
      \ than or equal to 2.\n\nThe constraint for the `tensors` parameter can be expressed\
      \ as:"
    length: 1
    target:
      choosen_dtype:
        out: tensor
        tensors: list[tensor]
      msg: 'multi_dot(): expected at least 2 tensors but got 0'
      package: torch
    txt: len(tensors) >= 2
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        out: tensor
        tensors: list[tensor]
      msg: 'multi_dot(): the first tensor must be 1D or 2D but got 9D'
      package: torch
    txt: tensors[0].dim() == 2
  - f1_score: 59.347181008902076
    overall_score: 28.0
    precision: 50.0
    recall: 72.99270072992701
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        out: tensor
        tensors: list[tensor]
      msg: 'multi_dot(): the last tensor must be 1D or 2D but got 9D'
      package: torch
    txt: tensors[-1].dim() == 2
  - f1_score: 50.83932853717027
    overall_score: 29.5
    precision: 53.0
    recall: 48.84792626728111
