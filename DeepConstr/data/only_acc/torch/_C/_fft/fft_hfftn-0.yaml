args:
  dtype:
  - Tensor
  - Optional[List[int]]
  - Optional[List[int]]
  - Optional[str]
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - s
  - dim
  - norm
  required:
  - true
  - false
  - false
  - false
name: torch._C._fft.fft_hfftn
package: torch
pass_rate: 96.66666666666667
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: None
        norm: str
        s: None
        self: tensor
      msg: Invalid number of data points (0) specified
      package: torch
    txt: all(i > 0 for i in self.shape)
  - f1_score: 68.72852233676976
    overall_score: 100
    precision: 100.0
    recall: 52.35602094240838
- - cot: The error is due to an invalid normalization mode. The value provided for
      'norm' is "zePZ" which is not a valid normalization mode. The valid normalization
      modes are "backward" and "forward". Therefore, the value of 'norm' should be
      corrected to either "backward" or "forward".
    length: 1
    target:
      choosen_dtype:
        dim: None
        norm: str
        s: None
        self: tensor
      msg: 'Invalid normalization mode: "UbxY"'
      package: torch
    txt: norm in ["backward", "forward"]
  - f1_score: 99.33774834437087
    overall_score: 100
    precision: 100.0
    recall: 98.68421052631578
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: None
        norm: str
        s: None
        self: tensor
      msg: hfftn must transform at least one axis
      package: torch
    txt: self.dim() > 0
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: Optional[List[int]]
        norm: Optional[str]
        s: Optional[List[int]]
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: Optional[List[int]]
        norm: Optional[str]
        s: Optional[List[int]]
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
