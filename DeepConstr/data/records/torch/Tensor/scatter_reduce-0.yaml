args:
  dtype:
  - Tensor
  - int
  - Tensor
  - Tensor
  - str
  - bool
  is_pos:
  - true
  - false
  - false
  - false
  - false
  - false
  name:
  - self
  - dim
  - index
  - src
  - reduce
  - include_self
  required:
  - true
  - true
  - true
  - true
  - true
  - false
name: torch.Tensor.scatter_reduce
package: torch
pass_rate: 0.0
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: int
        include_self: bool
        index: tensor
        reduce: str
        self: tensor
        src: tensor
      msg: 'scatter(): Expected dtype int64 for index'
      package: torch
    txt: dtype(index) == int64
  - f1_score: 72.75666936135812
    overall_score: 100
    precision: 100.0
    recall: 57.179161372299866
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: int
        include_self: bool
        index: tensor
        reduce: str
        self: tensor
        src: tensor
      msg: Dimension out of range (expected to be in range of [-1, 0], but got -3)
      package: torch
    txt: dim >= -len(self.shape) and dim < len(self.shape) and dim >= -1 and dim <=
      0
  - f1_score: 75.88532883642496
    overall_score: 100
    precision: 100.0
    recall: 61.141304347826086
