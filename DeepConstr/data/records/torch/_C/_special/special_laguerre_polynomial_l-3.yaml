args:
  dtype:
  - number
  - Tensor
  - Tensor
  is_pos:
  - false
  - false
  - false
  name:
  - x
  - n
  - out
  required:
  - true
  - true
  - true
name: torch._C._special.special_laguerre_polynomial_l
package: torch
pass_rate: 94.3298969072165
rules:
- - cot: 'The error is triggered because the result type Float cannot be cast to the
      desired output type Short. Based on the given runtime information, the constraint
      to prevent the error is:'
    length: 1
    target:
      choosen_dtype:
        n: tensor
        out: tensor
        x: int
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: dtype(out) == dtype(n)
  - f1_score: 86.60524450744153
    overall_score: 55.30262225372076
    precision: 91.0
    recall: 82.61541433262506
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        n: tensor
        out: tensor
        x: int
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: (out.rank==n.rank) and (all(n.shape[i] == out.shape[i] for i in range(n.rank)))
  - f1_score: 78.2028148682786
    overall_score: 51.1014074341393
    precision: 98.5
    recall: 64.84141232794734
- - cot: default
    length: 2
    target:
      choosen_dtype:
        n: Tensor
        out: Tensor
        x: number
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in n.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        n: Tensor
        out: Tensor
        x: number
      msg: Too large tensor shape
      package: torch
    txt: n.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
