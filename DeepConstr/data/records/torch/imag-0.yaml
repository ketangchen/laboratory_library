args:
  dtype:
  - Tensor
  is_pos:
  - true
  name:
  - self
  required:
  - true
name: torch.imag
package: torch
pass_rate: 100
rules:
- - cot: Based on the given runtime information, the error is caused by the function
      `torch.imag` not being implemented for tensors with non-complex dtypes. To prevent
      the error, we can add a constraint to ensure that the input tensor has a complex
      dtype.
    length: 1
    target:
      choosen_dtype:
        self: tensor
      msg: imag is not implemented for tensors with non-complex dtypes.
      package: torch
    txt: (self.dtype in [complex64, complex128])
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
