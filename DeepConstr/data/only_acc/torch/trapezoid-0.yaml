args:
  dtype:
  - Tensor
  - Tensor
  - int
  is_pos:
  - false
  - false
  - false
  name:
  - y
  - x
  - dim
  required:
  - true
  - true
  - false
name: torch.trapezoid
package: torch
pass_rate: 100
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: int
        x: tensor
        y: tensor
      msg: Dimension out of range (expected to be in range of [-2, 1], but got -4)
      package: torch
    txt: dim >= -len(y.shape)
  - f1_score: 77.20739219712524
    overall_score: 50.0
    precision: 94.0
    recall: 65.50522648083623
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        dim: int
        x: tensor
        y: tensor
      msg: The size of tensor a (7) must match the size of tensor b (8) at non-singleton
        dimension 6
      package: torch
    txt: (all(x.shape[i] == y.shape[i] or x.shape[i] == 1 or y.shape[i] == 1 for i
      in range(-1, -min(len(x.shape), len(y.shape))-1, -1))) and (all(x.shape[i] ==
      y.shape[i] for i in range(1, len(x.shape))))
  - f1_score: 75.8974358974359
    overall_score: 38.5
    precision: 74.0
    recall: 77.89473684210526
- - cot: synthesized
    length: 4
    target:
      choosen_dtype:
        dim: int
        x: tensor
        y: tensor
      msg: Dimension out of range (expected to be in range of [-1, 0], but got 3)
      package: torch
    txt: (((dim < 2) and (1 >= -len(x.shape) and 1 < len(x.shape))) and (dim >= -len(x.shape)))
      and (dim < 0)
  - f1_score: 79.05138339920948
    overall_score: 100
    precision: 100.0
    recall: 65.359477124183
- - cot: "The error is triggered because the size of tensor `x` (8) does not match\
      \ the size of tensor `y` (9) at non-singleton dimension 6. To prevent this error,\
      \ the dimensions and shape of `x` and `y` should be compatible. \n\nThe constraint\
      \ can be formulated as follows:"
    length: 1
    target:
      choosen_dtype:
        dim: int
        x: tensor
        y: tensor
      msg: The size of tensor a (2) must match the size of tensor b (8) at non-singleton
        dimension 4
      package: torch
    txt: x.dim() == y.dim() and x.shape == y.shape
  - f1_score: 89.68609865470852
    overall_score: 100
    precision: 100.0
    recall: 81.30081300813008
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: int
        x: Tensor
        y: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in y.shape) and all(i >= 0 for i in x.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: int
        x: Tensor
        y: Tensor
      msg: Too large tensor shape
      package: torch
    txt: y.rank <= 7 and x.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
