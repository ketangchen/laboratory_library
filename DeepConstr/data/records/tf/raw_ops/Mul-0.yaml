args:
  dtype:
  - str
  - bfloat16,float16,float32,float64,uint8,int8,uint16,int16,int32,uint32,uint64,int64,complex64,complex128
  - bfloat16,float16,float32,float64,uint8,int8,uint16,int16,int32,uint32,uint64,int64,complex64,complex128
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.raw_ops.Mul
package: tensorflow
pass_rate: 100
rules:
- - cot: 'Based on the given runtime information, the error arises because the function
      is trying to perform the multiplication operation on an int32 tensor and a float
      tensor. However, both tensors in the generated args must have the same data
      type. To prevent this error, the data type of tensor y should be corrected.
      It should be equal to the data type of tensor x. So the constraint to prevent
      the error is:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute Mul as input #1(zero-based) was expected to be a float
        tensor but is a int32 tensor [Op:Mul] name: pmNG'
      package: tensorflow
    txt: dtype(y) == dtype(x)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__Mul_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [5,3,9,3,3,3,3] vs. [4,4,4,4,4,4] [Op:Mul] name: OjGh'
      package: tensorflow
    txt: (all(x.shape[i] == y.shape[i] or x.shape[i] == 1 or y.shape[i] == 1 for i
      in range(-1, -min(len(x), len(y))-1, -1))) and (len(x) == len(y) and all(x.shape[i]==y.shape[i]
      for i in range(x.rank)))
  - f1_score: 96.18320610687022
    overall_score: 60.09160305343511
    precision: 94.5
    recall: 97.92746113989637
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: bfloat16,float16,float32,float64,uint8,int8,uint16,int16,int32,uint32,uint64,int64,complex64,complex128
        y: bfloat16,float16,float32,float64,uint8,int8,uint16,int16,int32,uint32,uint64,int64,complex64,complex128
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: bfloat16,float16,float32,float64,uint8,int8,uint16,int16,int32,uint32,uint64,int64,complex64,complex128
        y: bfloat16,float16,float32,float64,uint8,int8,uint16,int16,int32,uint32,uint64,int64,complex64,complex128
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
