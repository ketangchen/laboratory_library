args:
  dtype:
  - str
  - int8,int16,int32,int64,uint8,uint16,uint32,uint64
  is_pos:
  - false
  - false
  name:
  - name
  - x
  required:
  - false
  - true
name: tf.raw_ops.Invert
package: tensorflow
pass_rate: 100
rules:
- - cot: 'The error occurs because the input tensor `x` is of type float32, which
      is not allowed. To prevent this error, the input tensor `x` should be of one
      of the allowed types: int8, int16, int32, int64, uint8, uint16, uint32, uint64.'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
      msg: "Value for attr 'T' of float is not in the list of allowed values: int8,\
        \ int16, int32, int64, uint8, uint16, uint32, uint64\n\t; NodeDef: {{node\
        \ Invert}}; Op<name=Invert; signature=x:T -> y:T; attr=T:type,allowed=[DT_INT8,\
        \ DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64]>\
        \ [Op:Invert] name: Mfrh"
      package: tensorflow
    txt: dtype(x) in ["int8", "int16", "int32", "int64", "uint8", "uint16", "uint32",
      "uint64"]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        x: int8,int16,int32,int64,uint8,uint16,uint32,uint64
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        x: int8,int16,int32,int64,uint8,uint16,uint32,uint64
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
