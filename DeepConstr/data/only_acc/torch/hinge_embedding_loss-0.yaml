args:
  dtype:
  - Tensor
  - Tensor
  - float
  - int
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - target
  - margin
  - reduction
  required:
  - true
  - true
  - false
  - false
name: torch.hinge_embedding_loss
package: torch
pass_rate: 99.66666666666667
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        margin: float
        reduction: int
        self: tensor
        target: tensor
      msg: The size of tensor a (7) must match the size of tensor b (9) at non-singleton
        dimension 3
      package: torch
    txt: (self.shape[i] == 1) and (self.dim == target.dim and self.shape == target.shape)
  - f1_score: 86.58008658008657
    overall_score: 100
    precision: 100.0
    recall: 76.33587786259541
- - cot: default
    length: 2
    target:
      choosen_dtype:
        margin: float
        reduction: int
        self: Tensor
        target: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in target.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        margin: float
        reduction: int
        self: Tensor
        target: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and target.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        margin: float
        reduction: int
        self: Tensor
        target: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in target.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        margin: float
        reduction: int
        self: Tensor
        target: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and target.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
