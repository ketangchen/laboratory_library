args:
  dtype:
  - float
  - float16,float32
  - str
  is_pos:
  - false
  - false
  - false
  name:
  - delta
  - images
  - name
  required:
  - true
  - true
  - false
name: tf.raw_ops.AdjustHue
package: tensorflow
pass_rate: 33.0
rules:
- - cot: 'The error occurs because the input tensor must be at least 3-dimensional,
      but the shape of the input tensor is [4, 4]. To prevent the error, the shape
      of the input tensor should have at least 3 dimensions. Therefore, the constraint
      would be:'
    length: 1
    target:
      choosen_dtype:
        delta: float
        images: tensor
        name: str
      msg: '{{function_node __wrapped__AdjustHue_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        input must be at least 3-D, got shape[1,1] [Op:AdjustHue] name: aYmY'
      package: tensorflow
    txt: (images.rank >= 3)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        delta: float
        images: tensor
        name: str
      msg: '{{function_node __wrapped__AdjustHue_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        input must have 3 channels but instead has 5 channels. [Op:AdjustHue] name:
        gxjC'
      package: tensorflow
    txt: ((images.shape[2] == 3)) and (images.shape[-1] == 3)
  - f1_score: 64.02439024390245
    overall_score: 27.75
    precision: 52.5
    recall: 82.03125
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        delta: float
        images: tensor
        name: str
      msg: "Value for attr 'T' of int32 is not in the list of allowed values: half,\
        \ float\n\t; NodeDef: {{node AdjustHue}}; Op<name=AdjustHue; signature=images:T,\
        \ delta:float -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF,\
        \ DT_FLOAT]> [Op:AdjustHue] name: AXjk"
      package: tensorflow
    txt: dtype(images) in ["half", "float32"]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: Based on the given runtime information, the error occurs because the input
      tensor has 7 dimensions, but the function `tf.raw_ops.AdjustHue` only supports
      up to 6 dimensions for the `images` argument. Therefore, the constraint should
      be that the rank of the `images` tensor should be less than or equal to 6.
    length: 1
    target:
      choosen_dtype:
        delta: float
        images: tensor
        name: str
      msg: "Could not find device for node: {{node AdjustHue}} = AdjustHue[T=DT_HALF]\n\
        All kernels registered for op AdjustHue:\n  device='XLA_CPU_JIT'; T in [DT_FLOAT,\
        \ DT_HALF]\n  device='XLA_GPU_JIT'; T in [DT_FLOAT, DT_HALF]\n  device='CPU';\
        \ T in [DT_FLOAT]\n  device='GPU'; T in [DT_HALF]\n  device='GPU'; T in [DT_FLOAT]\n\
        \ [Op:AdjustHue] name: kyZZ"
      package: tensorflow
    txt: images.rank <= 6
  - f1_score: 41.84397163120567
    overall_score: 17.75
    precision: 29.5
    recall: 71.95121951219512
- - cot: default
    length: 1
    target:
      choosen_dtype:
        delta: float
        images: float16,float32
        name: str
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in images.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        delta: float
        images: float16,float32
        name: str
      msg: Too large tensor shape
      package: tensorflow
    txt: images.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
