args:
  dtype:
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - str
  is_pos:
  - false
  - false
  name:
  - input
  - name
  required:
  - true
  - false
name: tf.raw_ops.Cholesky
package: tensorflow
pass_rate: 2.5
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        input: tensor
        name: str
      msg: "Value for attr 'T' of int32 is not in the list of allowed values: double,\
        \ float, half, complex64, complex128\n\t; NodeDef: {{node Cholesky}}; Op<name=Cholesky;\
        \ signature=input:T -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT,\
        \ DT_HALF, DT_COMPLEX64, DT_COMPLEX128]> [Op:Cholesky] name: qtuq"
      package: tensorflow
    txt: dtype(input) in ["double", "float", "half", "complex64", "complex128"]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'The error arises because the input tensor must have a rank greater than
      or equal to 2, but the given tensor has a rank of 0. Therefore, the constraint
      that prevents the error is:'
    length: 1
    target:
      choosen_dtype:
        input: tensor
        name: str
      msg: '{{function_node __wrapped__Cholesky_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Input tensor 0 must have rank >= 2, got 0 [Op:Cholesky] name: EvtN'
      package: tensorflow
    txt: rank(input) >= 2
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        input: tensor
        name: str
      msg: '{{function_node __wrapped__Cholesky_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Input matrix must be square. [Op:Cholesky] name: TPdt'
      package: tensorflow
    txt: input.shape[0] == input.shape[1]
  - f1_score: 89.42307692307692
    overall_score: 56.71153846153846
    precision: 93.0
    recall: 86.1111111111111
- - cot: default
    length: 1
    target:
      choosen_dtype:
        input: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        name: str
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in input.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        input: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        name: str
      msg: Too large tensor shape
      package: tensorflow
    txt: input.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
