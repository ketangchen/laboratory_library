args:
  dtype:
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.raw_ops.LessEqual
package: tensorflow
pass_rate: 100
rules:
- - cot: synthesized
    length: 4
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__LessEqual_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [4,4,4,4,4,4,4] vs. [6,1,2,1,3,5,7] [Op:LessEqual] name:
        DOVZ'
      package: tensorflow
    txt: (((all(x.shape[i] == y.shape[i] or x.shape[i] == 1 or y.shape[i] == 1 for
      i in range(-1, -min(len(x.shape), len(y.shape))-1, -1))) or (x.shape == y.shape))
      and (all(x.shape[i] == y.shape[i] or x.shape[i] == 1 or y.shape[i] == 1 for
      i in range(x.rank)))) and (len(x.shape) == len(y.shape))
  - f1_score: 95.23809523809523
    overall_score: 100
    precision: 100.0
    recall: 90.9090909090909
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: (len(y.shape) >= 0) and (all([dim >= 0 for dim in x.shape]) and all([dim
      >= 0 for dim in y.shape]))
  - f1_score: 67.11409395973153
    overall_score: 100
    precision: 100.0
    recall: 50.505050505050505
- - cot: 'Based on the given runtime information, the error arises because the function
      is trying to perform a `LessEqual` operation on a float tensor and an int32
      tensor. However, both tensors in the generated args must have the same data
      type. Let''s see what the args were. The ''x'' tensor is of type int32, but
      the ''y'' tensor is of type float. Therefore, the constraint to prevent the
      error is:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute LessEqual as input #1(zero-based) was expected to be a
        float tensor but is a int32 tensor [Op:LessEqual] name: pHCu'
      package: tensorflow
    txt: dtype(y) == dtype(x)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: The error occurs because broadcasting between the dimensions [1,7,2,3,1,5,7]
      and [6,1,2,1,5,1,1] is not supported in the tf.raw_ops.LessEqual operation.
      This means that the shapes of 'x' and 'y' are incompatible for this operation.
      To prevent this error, the dimensions of 'x' and 'y' should be made compatible
      for broadcasting.
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__LessEqual_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Broadcast between [1,7,2,3,1,5,7] and [6,1,2,1,5,1,1] is not supported yet.
        [Op:LessEqual] name: vOig'
      package: tensorflow
    txt: x.shape == y.shape
  - f1_score: 66.66666666666667
    overall_score: 100
    precision: 100.0
    recall: 50.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
