args:
  dtype:
  - Tensor
  - Tensor
  - Optional[str]
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - other
  - rounding_mode
  required:
  - true
  - true
  - false
name: torch.div
package: torch
pass_rate: 100
rules:
- - cot: 'The error is triggered because the rounding_mode provided is not one of
      None, ''trunc'', or ''floor''. The rounding_mode should be one of these three
      options. To prevent this error in the future and generate constraints that do
      not trigger it, we need to ensure that the rounding_mode is always one of None,
      ''trunc'', or ''floor''. So, the constraint for the ''rounding_mode'' parameter
      can be expressed as:'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        rounding_mode: str
        self: tensor
      msg: div expected rounding_mode to be one of None, 'trunc', or 'floor' but found
        'vmBq'
      package: torch
    txt: rounding_mode in [None, 'trunc', 'floor']
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'Error is triggered because the size of tensor a (6) must match the size
      of tensor b (5) at non-singleton dimension 2. Let''s see what the args were.
      The size of tensor a is 6 and the size of tensor b is 5 at non-singleton dimension
      2. Therefore, the condition that prevents the error is:'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        rounding_mode: None
        self: tensor
      msg: The size of tensor a (6) must match the size of tensor b (5) at non-singleton
        dimension 2
      package: torch
    txt: self.shape[2] == other.shape[2]
  - f1_score: 76.62835249042146
    overall_score: 100
    precision: 100.0
    recall: 62.111801242236034
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        rounding_mode: Optional[str]
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in other.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        rounding_mode: Optional[str]
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and other.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
