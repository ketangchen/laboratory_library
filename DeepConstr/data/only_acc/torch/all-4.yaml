args:
  dtype:
  - Tensor
  - Optional[List[int]]
  - bool
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - dim
  - keepdim
  required:
  - true
  - false
  - false
name: torch.all
package: torch
pass_rate: 100
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: None
        keepdim: bool
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: all(out.shape[i] == self.shape[i] for i in range(out.rank))
  - f1_score: 67.11635750421586
    overall_score: 52.75
    precision: 99.5
    recall: 50.63613231552163
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: Optional[List[int]]
        keepdim: bool
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: Optional[List[int]]
        keepdim: bool
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
