args:
  dtype:
  - Tensor
  - Optional[int]
  - int
  - Optional[str]
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - n
  - dim
  - norm
  required:
  - true
  - false
  - false
  - false
name: torch._C._fft.fft_ifft
package: torch
pass_rate: 79.33333333333333
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: int
        n: int
        norm: str
        self: tensor
      msg: Dimension out of range (expected to be in range of [-2, 1], but got -3)
      package: torch
    txt: dim >= -len(self.shape)
  - f1_score: 68.26801517067004
    overall_score: 48.0
    precision: 90.0
    recall: 54.989816700610994
- - cot: 'The error is due to an invalid normalization mode. The value provided for
      ''norm'' is "hHGA", which is not in the allowed values: "backward", "forward",
      "ortho". Therefore, the value for ''norm'' should be corrected to be either
      "backward", "forward", or "ortho".'
    length: 1
    target:
      choosen_dtype:
        dim: int
        n: None
        norm: str
        self: tensor
      msg: 'Invalid normalization mode: "TNkG"'
      package: torch
    txt: norm in ["backward", "forward", "ortho"]
  - f1_score: 92.59259259259261
    overall_score: 100
    precision: 100.0
    recall: 86.20689655172414
- - cot: 'Based on the given runtime information, the error is caused by specifying
      an invalid number of data points. The argument `n` has a value of -3, which
      is not a valid number of data points. The valid range for `n` should be greater
      than 0.


      To prevent the error, the following constraint can be formulated:'
    length: 1
    target:
      choosen_dtype:
        dim: int
        n: int
        norm: str
        self: tensor
      msg: Invalid number of data points (-3) specified
      package: torch
    txt: (n > 0)
  - f1_score: 93.45794392523364
    overall_score: 100
    precision: 100.0
    recall: 87.71929824561403
- - cot: 'The constraint to prevent the error of dimension out of range can be formulated
      as follows:'
    length: 1
    target:
      choosen_dtype:
        dim: int
        n: None
        norm: None
        self: tensor
      msg: Dimension out of range (expected to be in range of [-7, 6], but got 7)
      package: torch
    txt: dim >= -len(self.shape) and dim < len(self.shape)
  - f1_score: 59.20398009950248
    overall_score: 42.666666666666664
    precision: 79.33333333333333
    recall: 47.222222222222214
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        n: Optional[int]
        norm: Optional[str]
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        n: Optional[int]
        norm: Optional[str]
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
