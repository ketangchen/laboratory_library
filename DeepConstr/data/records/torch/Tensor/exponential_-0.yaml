args:
  dtype:
  - Tensor
  - float
  - Optional[Generator]
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - lambd
  - generator
  required:
  - true
  - false
  - false
name: torch.Tensor.exponential_
package: torch
pass_rate: 95.66666666666667
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        generator: None
        lambd: float
        self: tensor
      msg: exponential_ expects lambda > 0.0, but found lambda=0
      package: torch
    txt: lambd > 0.0
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        generator: None
        lambd: float
        self: tensor
      msg: Exponential distribution is a continuous probability distribution. dtype
        must be a floating point but you specified Int
      package: torch
    txt: dtype(self) == float
  - f1_score: 99.00990099009901
    overall_score: 100
    precision: 100.0
    recall: 98.0392156862745
- - cot: default
    length: 1
    target:
      choosen_dtype:
        generator: Optional[Generator]
        lambd: float
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        generator: Optional[Generator]
        lambd: float
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
