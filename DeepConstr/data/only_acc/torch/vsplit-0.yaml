args:
  dtype:
  - Tensor
  - int
  is_pos:
  - true
  - false
  name:
  - self
  - sections
  required:
  - true
  - true
name: torch.vsplit
package: torch
pass_rate: 100
rules:
- - cot: The error is triggered because the size of dimension 0 of the tensor is not
      divisible by the split_size 75. To prevent this error, we need to ensure that
      the size of dimension 0 is divisible by the split_size.
    length: 1
    target:
      choosen_dtype:
        sections: int
        self: tensor
      msg: torch.vsplit attempted to split along dimension 0, but the size of the
        dimension 1 is not divisible by the split_size 57!
      package: torch
    txt: self.shape[0] % sections == 0
  - f1_score: 66.66666666666667
    overall_score: 100
    precision: 100.0
    recall: 50.0
- - cot: 'Based on the given runtime information, the error is triggered because the
      tensor `self` has 0 dimensions, but `torch.vsplit` requires a tensor with at
      least 2 dimensions. To prevent the error, the constraint can be formulated as:'
    length: 1
    target:
      choosen_dtype:
        sections: int
        self: tensor
      msg: torch.vsplit requires a tensor with at least 2 dimension, but got a tensor
        with 0 dimensions!
      package: torch
    txt: self.dim >= 2
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        sections: int
        self: tensor
      msg: torch.vsplit attempted to split along dimension 0, but the size of the
        dimension 1 is not divisible by the split_size 0!
      package: torch
    txt: (self.shape[0] % sections == 0) and (sections > 0)
  - f1_score: 91.11617312072892
    overall_score: 100
    precision: 100.0
    recall: 83.68200836820083
- - cot: default
    length: 1
    target:
      choosen_dtype:
        sections: int
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        sections: int
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
