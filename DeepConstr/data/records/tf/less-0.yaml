args:
  dtype:
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.less
package: tensorflow
pass_rate: 100
rules:
- - cot: "Based on the given runtime information, the error occurs because the function\
      \ tf.less expects the input tensor of index 1 to be of type int32, but it is\
      \ actually a float tensor. \n\nTo prevent this error, the data type of tensor\
      \ y should be changed to int32 so that it matches the data type of tensor x.\
      \ \n\nThe constraint to prevent the error can be formulated as:"
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute Less as input #1(zero-based) was expected to be a float
        tensor but is a int32 tensor [Op:Less] name: yvPI'
      package: tensorflow
    txt: dtype(y) == dtype(x)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 3
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__Less_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [7,3,6,6,6] vs. [7,3,6,6] [Op:Less] name: xKFa'
      package: tensorflow
    txt: ((x.shape == y.shape) and (all(x.shape[i] == y.shape[i] or x.shape[i] ==
      1 or y.shape[i] == 1 for i in range(-1, -min(len(x.shape), len(y.shape))-1,
      -1)))) and (len(x) == len(y))
  - f1_score: 96.94915254237289
    overall_score: 60.47457627118644
    precision: 95.33333333333334
    recall: 98.62068965517241
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
