args:
  dtype:
  - Tensor
  - List[int]
  is_pos:
  - true
  - false
  name:
  - self
  - dims
  required:
  - true
  - true
name: torch.permute
package: torch
pass_rate: 51.5
rules:
- - cot: 'The error occurs because the length of the desired permutation (dims) does
      not match the number of dimensions in the input tensor. Therefore, to prevent
      this error, the length of the permutation must match the number of dimensions
      in the tensor. The constraint to prevent this error can be formulated as follows:'
    length: 1
    target:
      choosen_dtype:
        dims: list[int]
        self: tensor
      msg: 'permute(sparse_coo): number of dimensions in the tensor input does not
        match the length of the desired ordering of dimensions i.e. input.dim() =
        2 is not equal to len(dims) = 0'
      package: torch
    txt: len(dims) == self.dim()
  - f1_score: 93.84615384615384
    overall_score: 48.75
    precision: 91.5
    recall: 96.3157894736842
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        dims: list[int]
        self: tensor
      msg: Dimension out of range (expected to be in range of [-2, 1], but got 6)
      package: torch
    txt: (6 >= -len(self.shape)) and (all(d >= -len(self.shape) and d < len(self.shape)
      for d in dims))
  - f1_score: 66.66666666666667
    overall_score: 100
    precision: 100.0
    recall: 50.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dims: List[int]
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dims: List[int]
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dims: List[int]
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dims: List[int]
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
