args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - other
  required:
  - true
  - true
name: torch.ne
package: torch
pass_rate: 100
rules:
- - cot: "Error is triggered because the size of tensors at non-singleton dimension\
      \ 5 doesn't match. What the args were? The shape of `self` tensor is `[3, 9,\
      \ 9, 9, 9]` and the shape of `other` tensor is `[7, 9, 1, 8, 8, 8]`. It seems\
      \ dimensions and shape of `self` and `other` tensors are not consistent. It\
      \ expects to have the same dimension among all tensors. \n\nTherefore, the constraint\
      \ that prevents the error is:"
    length: 1
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: The size of tensor a (6) must match the size of tensor b (7) at non-singleton
        dimension 3
      package: torch
    txt: self.dim == other.dim and self.shape == other.shape
  - f1_score: 99.00990099009901
    overall_score: 61.504950495049506
    precision: 100.0
    recall: 98.0392156862745
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in other.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and other.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
