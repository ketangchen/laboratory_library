args:
  dtype:
  - Tensor
  - int
  is_pos:
  - true
  - false
  name:
  - self
  - diagonal
  required:
  - true
  - false
name: torch.triu
package: torch
pass_rate: 100
rules:
- - cot: 'Based on the given runtime information, the error occurred because the input
      tensor `self` does not have at least 2 dimensions. To prevent the error, we
      need to ensure that `self` has at least 2 dimensions. Therefore, the constraint
      to prevent the error is:'
    length: 1
    target:
      choosen_dtype:
        diagonal: int
        self: tensor
      msg: 'triu: input tensor must have at least 2 dimensions'
      package: torch
    txt: self.dim >= 2
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        diagonal: int
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        diagonal: int
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
