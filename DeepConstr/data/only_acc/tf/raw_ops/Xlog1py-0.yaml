args:
  dtype:
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.raw_ops.Xlog1py
package: tensorflow
pass_rate: 100
rules:
- - cot: 'The error is caused by the incompatible shapes of x and y. The shapes of
      x and y should be broadcastable, meaning that the trailing dimensions of the
      tensors should either be 1 or the same. To prevent the error, we can formulate
      the following constraint:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__Xlog1py_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [3,6,7,1,2,7,6] vs. [2,3,3,3,3,3,3] [Op:Xlog1py] name:
        NMFS'
      package: tensorflow
    txt: all(x.shape[i] == y.shape[i] or x.shape[i] == 1 or y.shape[i] == 1 for i
      in range(-1, -min(len(x.shape), len(y.shape))-1, -1))
  - f1_score: 95.45454545454547
    overall_score: 52.0
    precision: 98.0
    recall: 93.0379746835443
- - cot: The error is triggered because negative dimensions are not allowed for tensors
      x and y. Therefore, the dimensions of the tensors x and y should be non-negative.
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(dimension >= 0 for dimension in x.shape) and all(dimension >= 0 for dimension
      in y.shape)
  - f1_score: 75.18796992481204
    overall_score: 100
    precision: 100.0
    recall: 60.24096385542168
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__Xlog1py_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [7,2,2,5,4,4,4] vs. [4,4,4,4,4,4,4] [Op:Xlog1py] name:
        LxAd'
      package: tensorflow
    txt: (x.shape[i] == 1) and (x.shape == y.shape)
  - f1_score: 72.11538461538463
    overall_score: 100
    precision: 100.0
    recall: 56.390977443609025
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: "Value for attr 'T' of int32 is not in the list of allowed values: half,\
        \ bfloat16, float, double, complex64, complex128\n\t; NodeDef: {{node Xlog1py}};\
        \ Op<name=Xlog1py; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_HALF,\
        \ DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]> [Op:Xlog1py]\
        \ name: yjlT"
      package: tensorflow
    txt: dtype(x) in ["half", "bfloat16", "float", "double", "complex64", "complex128"]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute Xlog1py as input #1(zero-based) was expected to be a complex128
        tensor but is a float tensor [Op:Xlog1py] name: iJCe'
      package: tensorflow
    txt: (dtype(x) == "half") and (dtype(y) == "float16")
  - f1_score: 70.2576112412178
    overall_score: 100
    precision: 100.0
    recall: 54.151624548736464
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
