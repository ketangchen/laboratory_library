args:
  dtype:
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.raw_ops.LogicalAnd
package: tensorflow
pass_rate: 99.5
rules:
- - cot: 'The error is due to the incompatible shapes of ''x'' and ''y'' in the LogicalAnd
      operation. Let''s see what the args were. Both ''x'' and ''y'' are tensors but
      they are of different shapes. For the LogicalAnd operation, the shapes of ''x''
      and ''y'' must be the same. Therefore, the constraints that will prevent the
      error can be defined as follows:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__LogicalAnd_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [6,6,6,6] vs. [8,7,1,8,8] [Op:LogicalAnd] name: cKvI'
      package: tensorflow
    txt: len(x) == len(y) and all(x.shape[i] == y.shape[i] for i in range(len(x.shape)))
  - f1_score: 96.61835748792271
    overall_score: 60.309178743961354
    precision: 100.0
    recall: 93.45794392523365
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute LogicalAnd as input #0(zero-based) was expected to be a
        bool tensor but is a float tensor [Op:LogicalAnd] name: etrS'
      package: tensorflow
    txt: (dtype(x) == bool) and (dtype(y) == dtype(x))
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
