args:
  dtype:
  - Tensor
  - str
  - Tensor
  - bool
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - dim
  - index
  - sparse_grad
  required:
  - true
  - true
  - true
  - false
name: torch.gather
package: torch
pass_rate: 0.0
rules:
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: str
        index: Tensor
        self: Tensor
        sparse_grad: bool
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in index.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: str
        index: Tensor
        self: Tensor
        sparse_grad: bool
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and index.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: str
        index: Tensor
        self: Tensor
        sparse_grad: bool
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in index.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: str
        index: Tensor
        self: Tensor
        sparse_grad: bool
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and index.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
