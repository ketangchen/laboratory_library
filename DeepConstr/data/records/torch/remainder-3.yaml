args:
  dtype:
  - Tensor
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - other
  - out
  required:
  - true
  - true
  - true
name: torch.remainder
package: torch
pass_rate: 100
rules:
- - cot: 'Error is triggered because the size of tensor a (9) must match the size
      of tensor b (8) at non-singleton dimension 6. The two tensors are inconsistent
      in shape. Let''s see what the args were. The shape of self tensor is [3, 9,
      9, 9, 9] and the shape of other tensor is [6, 7, 3, 8, 8, 8, 8]. Therefore,
      the condition that would prevent the error is:'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: tensor
      msg: The size of tensor a (9) must match the size of tensor b (7) at non-singleton
        dimension 3
      package: torch
    txt: self.shape[6] == other.shape[6]
  - f1_score: 75.046904315197
    overall_score: 100
    precision: 100.0
    recall: 60.06006006006006
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(dim >= 0 for dim in out.shape)
  - f1_score: 69.44444444444444
    overall_score: 46.72222222222222
    precision: 100.0
    recall: 53.191489361702125
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: dtype(self)==dtype(other)==dtype(out)
  - f1_score: 95.69377990430624
    overall_score: 59.84688995215312
    precision: 100.0
    recall: 91.74311926605505
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.rank==other.rank
  - f1_score: 83.68200836820084
    overall_score: 53.84100418410042
    precision: 100.0
    recall: 71.94244604316546
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.rank == self.rank and all(out.shape[i] == self.shape[i] for i in range(out.rank))
  - f1_score: 69.44444444444444
    overall_score: 46.72222222222222
    precision: 100.0
    recall: 53.191489361702125
- - cot: default
    length: 3
    target:
      choosen_dtype:
        other: Tensor
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in other.shape) and
      all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 3
    target:
      choosen_dtype:
        other: Tensor
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and other.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
