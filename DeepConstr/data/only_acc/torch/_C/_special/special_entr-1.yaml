args:
  dtype:
  - Tensor
  is_pos:
  - true
  name:
  - self
  required:
  - true
name: torch._C._special.special_entr
package: torch
pass_rate: 100
rules:
- - cot: 'The error is triggered because the result type Float cannot be cast to the
      desired output type Long. To prevent this error, the dtypes of the input tensors
      should be consistent with the desired output type. The constraint to prevent
      the error is:'
    length: 1
    target:
      choosen_dtype:
        self: tensor
      msg: result type Float can't be cast to the desired output type Long
      package: torch
    txt: dtype(self) == dtype(out) == torch.float64
  - f1_score: 67.56756756756758
    overall_score: 100
    precision: 100.0
    recall: 51.02040816326531
- - cot: default
    length: 1
    target:
      choosen_dtype:
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
