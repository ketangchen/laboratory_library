args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - out
  required:
  - true
  - true
name: torch._C._special.special_entr
package: torch
pass_rate: 100
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(out.shape[i] > 0 for i in range(out.rank))
  - f1_score: 81.13590263691684
    overall_score: 100
    precision: 100.0
    recall: 68.25938566552901
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: result type Float can't be cast to the desired output type Long
      package: torch
    txt: (dtype(self) == dtype(out) == torch.float64) or (dtype(out) == float32)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: The error is triggered because an attempt was made to resize a storage that
      is not resizable. From the runtime information, it's clear that the 'out' tensor
      is being resized. In this operation, the 'out' tensor's shape should match the
      shape of the 'self' tensor. Hence, the constraint that prevents the error would
      be that the shape of the 'out' tensor should be equal to the shape of the 'self'
      tensor.
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.shape == self.shape
  - f1_score: 76.04562737642586
    overall_score: 50.02281368821293
    precision: 100.0
    recall: 61.34969325153374
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
