args:
  dtype:
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  name:
  - name
  - x
  required:
  - false
  - true
name: tf.raw_ops.Lgamma
package: tensorflow
pass_rate: 100
rules:
- - cot: The error is due to a mismatch between the device capabilities and the requested
      operation. The problem is with the datatype of the input tensor, which is of
      type 'DT_BFLOAT16'. The LGamma operation does not support this datatype on some
      devices. Therefore, the data type of the input tensor 'x' should be corrected
      to a type that is supported by the LGamma operation and the target device.
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
      msg: "Could not find device for node: {{node Lgamma}} = Lgamma[T=DT_BFLOAT16]\n\
        All kernels registered for op Lgamma:\n  device='XLA_CPU_JIT'; T in [DT_FLOAT,\
        \ DT_DOUBLE, DT_BFLOAT16, DT_HALF]\n  device='GPU'; T in [DT_DOUBLE]\n  device='GPU';\
        \ T in [DT_FLOAT]\n  device='GPU'; T in [DT_HALF]\n  device='CPU'; T in [DT_DOUBLE]\n\
        \  device='CPU'; T in [DT_HALF]\n  device='CPU'; T in [DT_FLOAT]\n  device='XLA_GPU_JIT';\
        \ T in [DT_FLOAT, DT_DOUBLE, DT_BFLOAT16, DT_HALF]\n [Op:Lgamma] name: NcAf"
      package: tensorflow
    txt: x.dtype != "DT_BFLOAT16"
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
      msg: "Value for attr 'T' of int32 is not in the list of allowed values: bfloat16,\
        \ half, float, double\n\t; NodeDef: {{node Lgamma}}; Op<name=Lgamma; signature=x:T\
        \ -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>\
        \ [Op:Lgamma] name: FJcf"
      package: tensorflow
    txt: x.dtype in [bfloat16, half, float, double]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
