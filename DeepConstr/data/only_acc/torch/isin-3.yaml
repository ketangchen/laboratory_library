args:
  dtype:
  - Tensor
  - number
  - bool
  - bool
  is_pos:
  - false
  - false
  - false
  - false
  name:
  - elements
  - test_element
  - assume_unique
  - invert
  required:
  - true
  - true
  - false
  - false
name: torch.isin
package: torch
pass_rate: 34.66666666666667
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        assume_unique: bool
        elements: tensor
        invert: bool
        test_element: int
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: (out.shape[0]==1) or (out.shape[0] == 1 and out.shape[1] == 1)
  - f1_score: 38.50746268656716
    overall_score: 23.0
    precision: 43.0
    recall: 34.86486486486486
- - cot: default
    length: 1
    target:
      choosen_dtype:
        assume_unique: bool
        elements: Tensor
        invert: bool
        test_element: number
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in elements.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        assume_unique: bool
        elements: Tensor
        invert: bool
        test_element: number
      msg: Too large tensor shape
      package: torch
    txt: elements.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
