args:
  dtype:
  - Tensor
  - Tensor
  - Optional[bool]
  - Optional[bool]
  - str
  is_pos:
  - false
  - false
  - false
  - false
  - false
  name:
  - input
  - target
  - size_average
  - reduce
  - reduction
  required:
  - true
  - true
  - false
  - false
  - false
name: torch.nn.functional.mse_loss
package: torch
pass_rate: 100
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        input: tensor
        reduce: None
        reduction: str
        size_average: bool
        target: tensor
      msg: The size of tensor a (6) must match the size of tensor b (7) at non-singleton
        dimension 3
      package: torch
    txt: input.shape[3] == target.shape[3]
  - f1_score: 75.75757575757576
    overall_score: 100
    precision: 100.0
    recall: 60.97560975609756
- - cot: "Based on the given runtime information, the error is caused by an invalid\
      \ value for the 'reduction' argument. The provided value is 'WZFu', which is\
      \ not a valid option for 'reduction'. The valid options for 'reduction' are\
      \ ['none', 'mean', 'sum']. \n\nTherefore, the constraint to prevent the error\
      \ is:"
    length: 1
    target:
      choosen_dtype:
        input: tensor
        reduce: None
        reduction: str
        size_average: None
        target: tensor
      msg: esph is not a valid value for reduction
      package: torch
    txt: reduction in ['none', 'mean', 'sum']
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'The error is due to the input tensor having a data type of ''Int'', which
      is not supported by the mse_loss function. To prevent this error, the input
      tensor should have a data type of ''Float'' or ''Double''. Therefore, the constraint
      is:'
    length: 1
    target:
      choosen_dtype:
        input: tensor
        reduce: bool
        reduction: str
        size_average: bool
        target: tensor
      msg: '"mse_cpu" not implemented for ''Int'''
      package: torch
    txt: input.dtype in [torch.float32, torch.float64]
  - f1_score: 67.79661016949153
    overall_score: 100
    precision: 100.0
    recall: 51.28205128205129
- - cot: default
    length: 2
    target:
      choosen_dtype:
        input: Tensor
        reduce: Optional[bool]
        reduction: str
        size_average: Optional[bool]
        target: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in input.shape) and all(i >= 0 for i in target.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        input: Tensor
        reduce: Optional[bool]
        reduction: str
        size_average: Optional[bool]
        target: Tensor
      msg: Too large tensor shape
      package: torch
    txt: input.rank <= 7 and target.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
