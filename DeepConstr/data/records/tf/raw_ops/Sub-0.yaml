args:
  dtype:
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.raw_ops.Sub
package: tensorflow
pass_rate: 30.666666666666664
rules:
- - cot: 'Based on the given runtime information, the error occurs because the function
      tf.raw_ops.Sub expects the input tensor with index 1 (zero-based) to be a float
      tensor, but it is actually an int32 tensor.


      To prevent this error, we can add a constraint to ensure that the data type
      of the second input tensor (y) is float, which should be equal to the data type
      of the first input tensor (x).


      Therefore, the constraint would be:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute Sub as input #1(zero-based) was expected to be a float
        tensor but is a int32 tensor [Op:Sub] name: nVJF'
      package: tensorflow
    txt: dtype(y) == dtype(x)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__Sub_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [7,3,7,6,8,8,7] vs. [9,2,2,2,2,2,2] [Op:Sub] name: sVHb'
      package: tensorflow
    txt: (x.shape[i] == 1) or (all(x.shape[i] == y.shape[i] for i in range(x.rank)))
  - f1_score: 98.0
    overall_score: 61.0
    precision: 98.0
    recall: 98.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
