args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - out
  required:
  - true
  - true
name: torch._C._nn.mish
package: torch
pass_rate: 92.33333333333333
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: self.rank == out.rank and all(self.shape[i] == out.shape[i] for i in range(self.rank))
  - f1_score: 83.33333333333333
    overall_score: 100
    precision: 100.0
    recall: 71.42857142857143
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: Found dtype Float but expected Int
      package: torch
    txt: dtype(out) == dtype(self)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: '"mish_cpu" not implemented for ''Int'''
      package: torch
    txt: out.dtype != 'Int'
  - f1_score: 74.68879668049792
    overall_score: 100
    precision: 100.0
    recall: 59.602649006622514
- - cot: 'The error is due to the fact that the ''mish_cpu'' operation is not implemented
      for tensors of type ''Bool''. To prevent this error, the input tensor ''self''
      should not have a data type of ''Bool''. Therefore, the constraint can be formulated
      as:'
    length: 1
    target:
      choosen_dtype:
        out: tensor
        self: tensor
      msg: '"mish_cpu" not implemented for ''Bool'''
      package: torch
    txt: self.dtype != torch.bool
  - f1_score: 99.77827050997782
    overall_score: 100
    precision: 100.0
    recall: 99.5575221238938
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
