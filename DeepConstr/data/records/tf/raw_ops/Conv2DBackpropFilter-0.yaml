args:
  dtype:
  - str
  - list[int]
  - list[int]
  - list[int]
  - float16,bfloat16,float32,float64
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - str
  - list[int]
  - bool
  is_pos:
  - false
  - false
  - false
  - false
  - false
  - false
  - false
  - false
  - false
  - false
  name:
  - data_format
  - dilations
  - explicit_paddings
  - filter_sizes
  - input
  - name
  - out_backprop
  - padding
  - strides
  - use_cudnn_on_gpu
  required:
  - false
  - false
  - false
  - true
  - true
  - false
  - true
  - true
  - true
  - false
name: tf.raw_ops.Conv2DBackpropFilter
package: tensorflow
pass_rate: 0.0
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        data_format: str
        dilations: list[int]
        explicit_paddings: list[int]
        filter_sizes: int
        input: tensor
        name: str
        out_backprop: tensor
        padding: str
        strides: list[int]
        use_cudnn_on_gpu: bool
      msg: "Value for attr 'padding' of \"YnpA\" is not in the list of allowed values:\
        \ \"SAME\", \"VALID\", \"EXPLICIT\"\n\t; NodeDef: {{node Conv2DBackpropFilter}};\
        \ Op<name=Conv2DBackpropFilter; signature=input:T, filter_sizes:int32, out_backprop:T\
        \ -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE];\
        \ attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=[\"\
        SAME\", \"VALID\", \"EXPLICIT\"]; attr=explicit_paddings:list(int),default=[];\
        \ attr=data_format:string,default=\"NHWC\",allowed=[\"NHWC\", \"NCHW\"]; attr=dilations:list(int),default=[1,\
        \ 1, 1, 1]> [Op:Conv2DBackpropFilter] name: FOzq"
      package: tensorflow
    txt: (padding in ["SAME", "VALID", "EXPLICIT"]) and (data_format in ["NHWC", "NCHW"])
  - f1_score: 99.49748743718592
    overall_score: 51.0
    precision: 99.0
    recall: 100.0
- - cot: 'The error is triggered because the sliding window strides field does not
      specify 4 dimensions. Let''s see what the args were. strides was an empty list.
      To specify 4 dimensions, strides should have a length of 4. Therefore, the Left
      : len(strides) should be corrected to 4. Ops : ''=='', Right : 4.'
    length: 1
    target:
      choosen_dtype:
        data_format: str
        dilations: list[int]
        explicit_paddings: list[int]
        filter_sizes: int
        input: tensor
        name: str
        out_backprop: tensor
        padding: str
        strides: list[int]
        use_cudnn_on_gpu: bool
      msg: '{{function_node __wrapped__Conv2DBackpropFilter_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Sliding window strides field must specify 4 dimensions [Op:Conv2DBackpropFilter]
        name: HLBJ'
      package: tensorflow
    txt: len(strides) == 4
  - f1_score: 79.52286282306162
    overall_score: 100
    precision: 100.0
    recall: 66.006600660066
- - cot: The error is triggered because the data_format parameter is set to NCHW,
      but the Conv2DCustomBackpropFilterOp only supports NHWC. To prevent the error,
      the data_format parameter should be changed to NHWC.
    length: 1
    target:
      choosen_dtype:
        data_format: str
        dilations: list[int]
        explicit_paddings: list[int]
        filter_sizes: int
        input: tensor
        name: str
        out_backprop: tensor
        padding: str
        strides: list[int]
        use_cudnn_on_gpu: bool
      msg: '{{function_node __wrapped__Conv2DBackpropFilter_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Conv2DCustomBackpropFilterOp only supports NHWC. [Op:Conv2DBackpropFilter]
        name: osXZ'
      package: tensorflow
    txt: data_format == "NHWC"
  - f1_score: 96.38554216867469
    overall_score: 100
    precision: 100.0
    recall: 93.02325581395348
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        data_format: str
        dilations: list[int]
        explicit_paddings: list[int]
        filter_sizes: int
        input: tensor
        name: str
        out_backprop: tensor
        padding: str
        strides: list[int]
        use_cudnn_on_gpu: bool
      msg: '{{function_node __wrapped__Conv2DBackpropFilter_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Current implementation does not yet support strides in the batch and depth
        dimensions. [Op:Conv2DBackpropFilter] name: sYUY'
      package: tensorflow
    txt: (strides[0] == 1) and (strides[3] == 1)
  - f1_score: 95.01187648456057
    overall_score: 100
    precision: 100.0
    recall: 90.49773755656109
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        data_format: str
        dilations: list[int]
        explicit_paddings: list[int]
        filter_sizes: int
        input: tensor
        name: str
        out_backprop: tensor
        padding: str
        strides: list[int]
        use_cudnn_on_gpu: bool
      msg: '{{function_node __wrapped__Conv2DBackpropFilter_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Row and column strides should be larger than 0. [Op:Conv2DBackpropFilter]
        name: IPyZ'
      package: tensorflow
    txt: strides[1] > 0 and strides[2] > 0
  - f1_score: 95.33169533169533
    overall_score: 100
    precision: 100.0
    recall: 91.07981220657277
- - cot: "The error is triggered because the dilations field should specify 4 dimensions.\
      \ However, in the given runtime information, the dilations field is an empty\
      \ list. To prevent the error, the dilations field should be a list of 4 elements.\
      \ \n\nTo formulate the constraint, we can use the formula:"
    length: 1
    target:
      choosen_dtype:
        data_format: str
        dilations: list[int]
        explicit_paddings: list[int]
        filter_sizes: int
        input: tensor
        name: str
        out_backprop: tensor
        padding: str
        strides: list[int]
        use_cudnn_on_gpu: bool
      msg: '{{function_node __wrapped__Conv2DBackpropFilter_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Sliding window dilations field must specify 4 dimensions [Op:Conv2DBackpropFilter]
        name: PwFe'
      package: tensorflow
    txt: len(dilations) == 4
  - f1_score: 84.31372549019606
    overall_score: 100
    precision: 100.0
    recall: 72.88135593220339
- - cot: synthesized
    length: 3
    target:
      choosen_dtype:
        data_format: str
        dilations: list[int]
        explicit_paddings: list[int]
        filter_sizes: int
        input: tensor
        name: str
        out_backprop: tensor
        padding: str
        strides: list[int]
        use_cudnn_on_gpu: bool
      msg: '{{function_node __wrapped__Conv2DBackpropFilter_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Current implementation does not yet support dilations in the batch and depth
        dimensions. [Op:Conv2DBackpropFilter] name: wgcT'
      package: tensorflow
    txt: (((dilations[0] == 1)) and (all(d > 0 for d in dilations[:2]))) and (dilations[0]
      == 1 and dilations[3] == 1)
  - f1_score: 81.87134502923978
    overall_score: 100
    precision: 100.0
    recall: 69.30693069306932
- - cot: 'The error message indicates that the current CPU implementations do not
      support dilation rates larger than 1 in the tf.raw_ops.Conv2DBackpropFilter
      operation. The dilation rates are specified in the dilations argument, which
      is set to [1, 7, 7, 1] in this case. Therefore, the constraint to prevent the
      error is that all elements in the dilations argument should be 1. This can be
      formulated as follows:'
    length: 1
    target:
      choosen_dtype:
        data_format: str
        dilations: list[int]
        explicit_paddings: list[int]
        filter_sizes: int
        input: tensor
        name: str
        out_backprop: tensor
        padding: str
        strides: list[int]
        use_cudnn_on_gpu: bool
      msg: '{{function_node __wrapped__Conv2DBackpropFilter_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Current CPU implementations do not yet support dilation rates larger than
        1. [Op:Conv2DBackpropFilter] name: KmRo'
      package: tensorflow
    txt: all(i == 1 for i in dilations)
  - f1_score: 79.00000000000001
    overall_score: 100
    precision: 100.0
    recall: 65.28925619834712
