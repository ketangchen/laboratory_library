args:
  dtype:
  - Tensor
  - float
  is_pos:
  - true
  - false
  name:
  - self
  - p
  required:
  - true
  - false
name: torch.pdist
package: torch
pass_rate: 100
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        p: float
        self: tensor
      msg: 'pdist only supports 2D tensors, got: 0D'
      package: torch
    txt: self.dim() == 2
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        p: float
        self: tensor
      msg: pdist only supports non-negative p values
      package: torch
    txt: p >= 0
  - f1_score: 97.08737864077668
    overall_score: 100
    precision: 100.0
    recall: 94.33962264150942
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        p: float
        self: tensor
      msg: pdist only supports floating-point dtypes
      package: torch
    txt: self.dtype == torch.float64
  - f1_score: 67.68189509306261
    overall_score: 100
    precision: 100.0
    recall: 51.150895140664964
- - cot: default
    length: 1
    target:
      choosen_dtype:
        p: float
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        p: float
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
