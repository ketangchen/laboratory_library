args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - false
  - false
  name:
  - x
  - n
  required:
  - true
  - true
name: torch._C._special.special_chebyshev_polynomial_t
package: torch
pass_rate: 100
rules:
- - cot: 'Based on the given runtime information, the constraint that would prevent
      the error is:'
    length: 1
    target:
      choosen_dtype:
        n: tensor
        x: tensor
      msg: The size of tensor a (3) must match the size of tensor b (7) at non-singleton
        dimension 1
      package: torch
    txt: n.shape[6] == x.shape[6]
  - f1_score: 75.14231499051232
    overall_score: 100
    precision: 100.0
    recall: 60.18237082066869
- - cot: default
    length: 2
    target:
      choosen_dtype:
        n: Tensor
        x: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in n.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        n: Tensor
        x: Tensor
      msg: Too large tensor shape
      package: torch
    txt: x.rank <= 7 and n.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
