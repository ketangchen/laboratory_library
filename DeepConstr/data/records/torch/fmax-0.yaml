args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - other
  required:
  - true
  - true
name: torch.fmax
package: torch
pass_rate: 100
rules:
- - cot: 'The error is triggered because the size of tensor `a` (2) does not match
      the size of tensor `b` (7) at non-singleton dimension 4. To prevent this error,
      we need to ensure that the dimensions and shape of `a` and `b` are consistent.
      Therefore, the constraint can be formulated as:'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: The size of tensor a (2) must match the size of tensor b (9) at non-singleton
        dimension 6
      package: torch
    txt: self.dim == other.dim and self.shape == other.shape
  - f1_score: 99.83361064891847
    overall_score: 61.91680532445923
    precision: 100.0
    recall: 99.66777408637874
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in other.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and other.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
