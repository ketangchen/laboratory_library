args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - other
  required:
  - true
  - true
name: torch.div
package: torch
pass_rate: 100
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: The size of tensor a (9) must match the size of tensor b (5) at non-singleton
        dimension 6
      package: torch
    txt: self.shape[2] == other.shape[2]
  - f1_score: 75.046904315197
    overall_score: 100
    precision: 100.0
    recall: 60.06006006006006
- - cot: synthesized
    length: 3
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: ((out.rank == self.rank) or (out.shape == self.shape)) or (out.rank==other.rank
      and all(out.shape[i]==other.shape[i] for i in range(out.rank)))
  - f1_score: 68.02721088435375
    overall_score: 100
    precision: 100.0
    recall: 51.54639175257733
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in other.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and other.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
