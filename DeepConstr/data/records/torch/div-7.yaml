args:
  dtype:
  - Tensor
  - number
  - Optional[str]
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - other
  - rounding_mode
  - out
  required:
  - true
  - true
  - false
  - true
name: torch.div
package: torch
pass_rate: 100
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        other: int
        out: tensor
        rounding_mode: str
        self: tensor
      msg: div expected rounding_mode to be one of None, 'trunc', or 'floor' but found
        'LWOo'
      package: torch
    txt: rounding_mode in [None, 'trunc', 'floor']
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'The error is triggered because we are trying to resize the storage of the
      ''out'' tensor, which is Tensor<f32>[7, 5, 8, 6, 8, 5, 8], but it is not resizable.
      To prevent this error, the shape and rank of the ''out'' tensor should match
      the shape and rank of the operation result, which is the ''self'' tensor with
      shape Tensor<f32>[4, 9, 9, 9, 9, 9, 9]. Therefore, the constraint to prevent
      the error is:'
    length: 1
    target:
      choosen_dtype:
        other: int
        out: tensor
        rounding_mode: None
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.rank == self.rank and all(out.shape[i] == self.shape[i] for i in range(out.rank))
  - f1_score: 75.90132827324477
    overall_score: 100
    precision: 100.0
    recall: 61.16207951070336
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        other: int
        out: tensor
        rounding_mode: None
        self: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: (dtype(out) == int32) and (dtype(self) == Int)
  - f1_score: 67.79661016949153
    overall_score: 100
    precision: 100.0
    recall: 51.28205128205129
- - cot: 'The error is due to a division by zero operation in the torch.div function.
      What the args were? The divisor value ''other'' is zero, while division by zero
      is undefined in mathematics and thus an invalid operation. Therefore, to prevent
      this error, ''other'' should not be equal to zero. Therefore, Left : other,
      Op : !=, and Right : 0.'
    length: 1
    target:
      choosen_dtype:
        other: int
        out: tensor
        rounding_mode: None
        self: tensor
      msg: ZeroDivisionError
      package: torch
    txt: other != 0
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: number
        out: Tensor
        rounding_mode: Optional[str]
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: number
        out: Tensor
        rounding_mode: Optional[str]
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
