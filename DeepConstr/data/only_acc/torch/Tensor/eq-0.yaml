args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - other
  required:
  - true
  - true
name: torch.Tensor.eq
package: torch
pass_rate: 89.0
rules:
- - cot: 'Error is triggered because the shape of the tensors is too large, and exceeds
      the maximum limit. The shape of the self tensor is [9, 9, 9, 7, 9, 9, 9, 9,
      9]. To prevent the error, we need to limit the shape of the tensors to a smaller
      size. Let''s say the maximum allowed shape is [5, 5, 5, 5, 5, 5, 5, 5, 5]. Therefore,
      the constraint can be formulated as:'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: 'Too large tensor shape: shape = [9, 9, 9, 7, 9, 9, 9, 9, 9]'
      package: torch
    txt: self.shape[0] <= 5 and self.shape[1] <= 5 and self.shape[2] <= 5 and self.shape[3]
      <= 5 and self.shape[4] <= 5 and self.shape[5] <= 5 and self.shape[6] <= 5 and
      self.shape[7] <= 5 and self.shape[8] <= 5
  - f1_score: 67.70480704129993
    overall_score: 45.852403520649965
    precision: 100.0
    recall: 51.17707267144319
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in other.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and other.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
