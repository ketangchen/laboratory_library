args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - other
  required:
  - true
  - true
name: torch.bitwise_or
package: torch
pass_rate: 100
rules:
- - cot: 'The error is triggered because the size of tensor a (7) does not match the
      size of tensor b (9) at non-singleton dimension 5. To prevent this error, we
      need to ensure that the size of tensor a matches the size of tensor b at dimension
      5. We can formulate this constraint as follows:'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: The size of tensor a (5) must match the size of tensor b (9) at non-singleton
        dimension 5
      package: torch
    txt: self.shape[5] == other.shape[5]
  - f1_score: 77.72020725388603
    overall_score: 100
    precision: 100.0
    recall: 63.55932203389831
- - cot: 'The error arises because the torch.bitwise_or function is not implemented
      for float tensors. The function requires the tensors `self` and `other` to be
      of integer type. So, the Left : dtype(self) and dtype(other) should be corrected
      to match integer type. Op : ==, and Right : int.'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: '"bitwise_or_cpu" not implemented for ''Float'''
      package: torch
    txt: dtype(self) == int and dtype(other) == int
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in other.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and other.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
