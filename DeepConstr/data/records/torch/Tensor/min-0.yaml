args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - other
  required:
  - true
  - true
name: torch.Tensor.min
package: torch
pass_rate: 21.2
rules:
- - cot: 'The error is caused because the shape of the tensor "self" is smaller than
      the shape of the tensor "other" at non-singleton dimensions. To prevent this
      error, we need to ensure that the shape of "self" matches the shape of "other"
      at all non-singleton dimensions. Therefore, we can formulate the constraint
      as follows:'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: 'Too large tensor shape: shape = [5, 9, 9, 9, 9, 9, 9, 9, 9]'
      package: torch
    txt: self.shape == other.shape
  - f1_score: 73.04907481898634
    overall_score: 48.52453740949317
    precision: 90.8
    recall: 61.103633916554514
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in other.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and other.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
