args:
  dtype:
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  name:
  - name
  - tensor
  required:
  - false
  - true
name: tf.linalg.eigh
package: tensorflow
pass_rate: 88.0
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        tensor: tensor
      msg: '{{function_node __wrapped__SelfAdjointEigV2_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Input matrix must be square. [Op:SelfAdjointEigV2] name: RDbM'
      package: tensorflow
    txt: (tensor.shape[0] == tensor.shape[1]) and (tensor.shape[-2] == tensor.shape[-1])
  - f1_score: 68.02721088435375
    overall_score: 100
    precision: 100.0
    recall: 51.54639175257733
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        name: str
        tensor: tensor
      msg: '{{function_node __wrapped__SelfAdjointEigV2_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Input tensor 0 must have rank >= 2, got 0 [Op:SelfAdjointEigV2] name: Mbwg'
      package: tensorflow
    txt: tensor.dim >= 2
  - f1_score: 99.33774834437087
    overall_score: 100
    precision: 100.0
    recall: 98.68421052631578
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        tensor: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in tensor.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        tensor: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: tensor.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        tensor: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in tensor.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        name: str
        tensor: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: tensor.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
