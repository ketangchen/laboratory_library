args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - other
  required:
  - true
  - true
name: torch.Tensor.bitwise_or
package: torch
pass_rate: 100
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: 'Too large tensor shape: shape = [5, 8, 9, 9, 9, 9, 9, 9, 9]'
      package: torch
    txt: (len(self) > 0 and len(other) > 0) or (self.shape[7] <= 10)
  - f1_score: 66.97923643670461
    overall_score: 100
    precision: 100.0
    recall: 50.35246727089627
- - cot: 'Based on the values given, the error arises because the ''bitwise_or_cpu''
      operation is not implemented for ''Float'' dtype. The tensors ''other'' and
      ''self'' are both provided as float32, which is not compatible. So, the Left
      : dtype(other) or dtype(self) should be corrected to match an allowed type like
      int. Op : in, and Right : [int].'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: '"bitwise_or_cpu" not implemented for ''Float'''
      package: torch
    txt: dtype(other) in ["int"] and dtype(self) in ["int"]
  - f1_score: 78.80220646178094
    overall_score: 51.40110323089047
    precision: 100.0
    recall: 65.01950585175553
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        other: tensor
        self: tensor
      msg: The size of tensor a (9) must match the size of tensor b (8) at non-singleton
        dimension 5
      package: torch
    txt: self.shape == other.shape
  - f1_score: 91.99632014719411
    overall_score: 57.998160073597056
    precision: 100.0
    recall: 85.17887563884156
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in other.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        other: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and other.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
