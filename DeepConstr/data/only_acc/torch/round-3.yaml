args:
  dtype:
  - Tensor
  - int
  is_pos:
  - true
  - false
  name:
  - self
  - decimals
  required:
  - true
  - true
name: torch.round
package: torch
pass_rate: 100
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        decimals: int
        self: tensor
      msg: Found dtype Int but expected Float
      package: torch
    txt: dtype(out) == dtype(self)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: The error is due to the fact that the function `torch.round` is not implemented
      for `Int` data type. Therefore, to prevent the error, the data type of the input
      tensor should be changed to a compatible data type such as `Float` before calling
      `torch.round`.
    length: 1
    target:
      choosen_dtype:
        decimals: int
        self: tensor
      msg: '"round_cpu" not implemented for ''Int'''
      package: torch
    txt: self.dtype in [torch.float16, torch.float32, torch.float64]
  - f1_score: 95.23809523809523
    overall_score: 100
    precision: 100.0
    recall: 90.9090909090909
- - cot: default
    length: 1
    target:
      choosen_dtype:
        decimals: int
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        decimals: int
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
