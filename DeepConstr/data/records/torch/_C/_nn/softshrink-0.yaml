args:
  dtype:
  - Tensor
  - number
  is_pos:
  - true
  - false
  name:
  - self
  - lambd
  required:
  - true
  - false
name: torch._C._nn.softshrink
package: torch
pass_rate: 96.0
rules:
- - cot: 'The error is due to the function "softshrink_cpu" not being implemented
      for the data type ''Int''. The input tensor has a data type of ''Int'', which
      is not supported by the function. To prevent the error, the input tensor should
      have a data type other than ''Int'', such as ''Float''. So, Left : self.dtype,
      Op : !=, Right : int32'
    length: 1
    target:
      choosen_dtype:
        lambd: int
        self: tensor
      msg: '"softshrink_cpu" not implemented for ''Int'''
      package: torch
    txt: self.dtype != int32
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'The error occurs because the value of the parameter ''lambd'' is -1, which
      is less than 0. To prevent this error in the future and generate constraints
      that do not trigger it, we need to ensure that the value of ''lambd'' is always
      greater than or equal to 0. The constraint for the ''lambd'' parameter can be
      expressed as:'
    length: 1
    target:
      choosen_dtype:
        lambd: int
        self: tensor
      msg: lambda must be greater or equal to 0, but found to be -1.
      package: torch
    txt: lambd >= 0
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 1
    target:
      choosen_dtype:
        lambd: number
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        lambd: number
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
