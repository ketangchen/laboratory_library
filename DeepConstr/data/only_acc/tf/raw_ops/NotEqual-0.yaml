args:
  dtype:
  - bool
  - str
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  - false
  name:
  - incompatible_shape_error
  - name
  - x
  - y
  required:
  - false
  - false
  - true
  - true
name: tf.raw_ops.NotEqual
package: tensorflow
pass_rate: 100
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        incompatible_shape_error: bool
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__NotEqual_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [3,6,6,6] vs. [2,2,2,2,2] [Op:NotEqual] name: jIsW'
      package: tensorflow
    txt: (len(x) == len(y)) and (x.shape == y.shape)
  - f1_score: 77.72020725388603
    overall_score: 100
    precision: 100.0
    recall: 63.55932203389831
- - cot: 'Based on the given runtime information, the error occurs because the function
      is trying to perform the NotEqual operation on an int32 tensor and a float tensor.
      However, both tensors must have the same data type. Therefore, the constraint
      to prevent the error is:'
    length: 1
    target:
      choosen_dtype:
        incompatible_shape_error: bool
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute NotEqual as input #1(zero-based) was expected to be a int32
        tensor but is a float tensor [Op:NotEqual] name: PEXb'
      package: tensorflow
    txt: dtype(y) == dtype(x)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        incompatible_shape_error: bool
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        incompatible_shape_error: bool
        name: str
        x: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        y: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
