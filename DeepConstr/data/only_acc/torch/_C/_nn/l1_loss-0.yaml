args:
  dtype:
  - Tensor
  - Tensor
  - int
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - target
  - reduction
  required:
  - true
  - true
  - false
name: torch._C._nn.l1_loss
package: torch
pass_rate: 100
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        reduction: int
        self: tensor
        target: tensor
      msg: The size of tensor a (9) must match the size of tensor b (4) at non-singleton
        dimension 4
      package: torch
    txt: (self.dim(3) == target.dim(3)) and (target.shape[2] == 1)
  - f1_score: 77.66990291262135
    overall_score: 100
    precision: 100.0
    recall: 63.49206349206349
- - cot: default
    length: 2
    target:
      choosen_dtype:
        reduction: int
        self: Tensor
        target: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in target.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        reduction: int
        self: Tensor
        target: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and target.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
