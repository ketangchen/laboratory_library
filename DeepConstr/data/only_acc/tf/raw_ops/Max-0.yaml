args:
  dtype:
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  - bool
  - str
  is_pos:
  - false
  - false
  - false
  - false
  name:
  - axis
  - input
  - keep_dims
  - name
  required:
  - true
  - true
  - false
  - false
name: tf.raw_ops.Max
package: tensorflow
pass_rate: 1.6666666666666667
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        axis: tensor
        input: tensor
        keep_dims: bool
        name: str
      msg: "Value for attr 'Tidx' of float is not in the list of allowed values: int32,\
        \ int64\n\t; NodeDef: {{node Max}}; Op<name=Max; signature=input:T, reduction_indices:Tidx\
        \ -> output:T; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT,\
        \ DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 12026250066093653660, DT_QINT8,\
        \ DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32,\
        \ DT_INT64]> [Op:Max] name: lWCi"
      package: tensorflow
    txt: dtype(axis) in [int32, int64]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'The error is due to an invalid reduction dimension. The function is trying
      to reduce on dimension 734662, but the input tensor only has 6 dimensions, indexed
      from 0. So, the maximum valid dimension for reduction would be 5. Therefore,
      the condition to prevent the error is:'
    length: 1
    target:
      choosen_dtype:
        axis: tensor
        input: tensor
        keep_dims: bool
        name: str
      msg: '{{function_node __wrapped__Max_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Invalid reduction dimension (734662 for input with 6 dimension(s) [Op:Max]
        name: BSMh'
      package: tensorflow
    txt: (i < input.rank for i in axis)
  - f1_score: 48.768472906403936
    overall_score: 19.5
    precision: 33.0
    recall: 93.39622641509435
- - cot: 'The error is caused by the negative dimension in the axis argument. To prevent
      the error, the dimension in the axis argument should be non-negative. Therefore,
      the constraint is:'
    length: 1
    target:
      choosen_dtype:
        axis: tensor
        input: tensor
        keep_dims: bool
        name: str
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(axis[i] >= 0 for i in range(len(axis)))
  - f1_score: 74.53416149068322
    overall_score: 100
    precision: 100.0
    recall: 59.4059405940594
- - cot: default
    length: 2
    target:
      choosen_dtype:
        axis: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        input: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        keep_dims: bool
        name: str
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in axis.shape) and all(i >= 0 for i in input.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        axis: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        input: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
        keep_dims: bool
        name: str
      msg: Too large tensor shape
      package: tensorflow
    txt: axis.rank <= 7 and input.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
