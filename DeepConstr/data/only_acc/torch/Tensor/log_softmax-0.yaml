args:
  dtype:
  - Tensor
  - int
  - None
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - dim
  - dtype
  required:
  - true
  - true
  - false
name: torch.Tensor.log_softmax
package: torch
pass_rate: 100
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: int
        dtype: None
        self: tensor
      msg: Dimension out of range (expected to be in range of [-3, 2], but got 93)
      package: torch
    txt: dim >= -len(self.shape)
  - f1_score: 67.2494956287828
    overall_score: 100
    precision: 100.0
    recall: 50.658561296859176
- - cot: 'The error is due to the fact that the "softmax_kernel_impl" function is
      not implemented for tensors of type ''Int''. To prevent this error, the input
      tensor should have a data type of float. So, Left : self.dtype, Op : ==, Right
      : torch.float32'
    length: 1
    target:
      choosen_dtype:
        dim: int
        dtype: None
        self: tensor
      msg: '"softmax_kernel_impl" not implemented for ''Int'''
      package: torch
    txt: self.dtype == torch.float32
  - f1_score: 99.8003992015968
    overall_score: 100
    precision: 100.0
    recall: 99.60159362549801
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        dtype: None
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        dtype: None
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
