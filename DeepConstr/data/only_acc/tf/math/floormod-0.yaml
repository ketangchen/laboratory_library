args:
  dtype:
  - tensor
  - tensor
  - str
  is_pos:
  - false
  - false
  - false
  name:
  - x
  - y
  - name
  required:
  - true
  - true
  - false
name: tf.math.floormod
package: null
pass_rate: 99.66666666666667
rules:
- - cot: 'The error is caused because the shapes of x and y are inconsistent. Let''s
      see what the args were. It seems shape of x and y are not same. so, len(x),
      x.shape, and len(y), y.shape should be corrected. It says should be same with
      x and y. so Op : ==, and Right : len(x), x.shape, len(y), and y.shape'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__FloorMod_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [4,7,6,6,2,1,6] vs. [1,3,5,3,3,3,3] [Op:FloorMod] name:
        ZIgg'
      package: tensorflow
    txt: all(x.shape[i]==y.shape[i] for i in range(len(x.shape)))
  - f1_score: 94.70304975922951
    overall_score: 52.166666666666664
    precision: 98.33333333333333
    recall: 91.3312693498452
- - cot: 'The error arises because the function is trying to perform the FloorMod
      operation on a float tensor and an int32 tensor. However, both tensors in the
      given runtime information must have the same data type. Let''s see what the
      variables were. The ''x'' tensor is of type float, but the ''y'' tensor is of
      type int32. Therefore, the constraint should be:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute FloorMod as input #1(zero-based) was expected to be a int32
        tensor but is a float tensor [Op:FloorMod] name: GCBE'
      package: tensorflow
    txt: dtype(y) == dtype(x)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'The error is triggered because the shapes of ''x'' and ''y'' are not compatible.
      The shape of ''x'' is [7,3,3] and the shape of ''y'' is [7,3,3,1,6,1,1]. To
      prevent the error, the shapes of ''x'' and ''y'' should be compatible. This
      means that for each dimension starting from the last, the size of the dimension
      in ''x'' should be equal to the size of the dimension in ''y'' or one of them
      should be 1.


      Therefore, the constraint to prevent the error is:'
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__FloorMod_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [7,3,3] vs. [7,3,3,1,6,1,1] [Op:FloorMod] name: NOhi'
      package: tensorflow
    txt: all(x.shape[i] == y.shape[i] or x.shape[i] == 1 or y.shape[i] == 1 for i
      in range(-1, -min(len(x.shape), len(y.shape))-1, -1))
  - f1_score: 78.53403141361257
    overall_score: 100
    precision: 100.0
    recall: 64.65517241379311
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: (y.ndim >= 0) and (all(dim >= 0 for dim in x.shape) and all(dim >= 0 for
      dim in y.shape))
  - f1_score: 68.02721088435375
    overall_score: 100
    precision: 100.0
    recall: 51.54639175257733
- - cot: synthesized
    length: 3
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__FloorMod_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [3,2,4,1,7,2] vs. [3] [Op:FloorMod] name: luzw'
      package: tensorflow
    txt: ((all(x.shape[i] == y.shape[i] or y.shape[i] == 1 for i in range(-1, -min(len(x.shape),
      len(y.shape))-1, -1))) and (x.shape[i] == 1)) or (len(x) == len(y))
  - f1_score: 69.07137375287796
    overall_score: 100
    precision: 100.0
    recall: 52.754982415005856
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: negative dimensions are not allowed
      package: null
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: Too large tensor shape
      package: null
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: negative dimensions are not allowed
      package: null
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: Too large tensor shape
      package: null
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
