args:
  dtype:
  - List[Tensor]
  is_pos:
  - true
  name:
  - tensors
  required:
  - true
name: torch._C._linalg.linalg_multi_dot
package: torch
pass_rate: 0.0
rules:
- - cot: 'The error occurs because the function `torch._C._linalg.linalg_multi_dot`
      expects at least 2 tensors as input, but it received 0 tensors. To prevent this
      error in the future and generate constraints that do not trigger it, we need
      to ensure that the number of tensors passed to the function is greater than
      or equal to 2. The constraint for the `tensors` parameter can be expressed as:'
    length: 1
    target:
      choosen_dtype:
        tensors: list[tensor]
      msg: 'multi_dot(): expected at least 2 tensors but got 0'
      package: torch
    txt: len(tensors) >= 2
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        tensors: list[tensor]
      msg: 'multi_dot(): the first tensor must be 1D or 2D but got 4D'
      package: torch
    txt: tensors[0].dim == 2
  - f1_score: 45.674740484429066
    overall_score: 19.5
    precision: 33.0
    recall: 74.15730337078652
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        tensors: list[tensor]
      msg: 'multi_dot(): the last tensor must be 1D or 2D but got 9D'
      package: torch
    txt: tensors[-1].dim() == 2
  - f1_score: 47.14640198511165
    overall_score: 26.75
    precision: 47.5
    recall: 46.79802955665024
