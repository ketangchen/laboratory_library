args:
  dtype:
  - Tensor
  - Tensor
  - Optional[Tensor]
  - bool
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  - false
  - false
  name:
  - self
  - bins
  - weight
  - density
  - hist
  - bin_edges
  required:
  - true
  - true
  - false
  - false
  - true
  - true
error: <class 'TypeError'>
name: torch.histogram
package: torch
pass_rate: 0
rules:
- - cot: default
    length: 5
    target:
      choosen_dtype:
        bin_edges: Tensor
        bins: Tensor
        density: bool
        hist: Tensor
        self: Tensor
        weight: Optional[Tensor]
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in bins.shape) and all(i
      >= 0 for i in weight.shape) and all(i >= 0 for i in hist.shape) and all(i >=
      0 for i in bin_edges.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 5
    target:
      choosen_dtype:
        bin_edges: Tensor
        bins: Tensor
        density: bool
        hist: Tensor
        self: Tensor
        weight: Optional[Tensor]
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and bins.rank <= 7 and weight.rank <= 7 and hist.rank <= 7
      and bin_edges.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
