args:
  dtype:
  - Tensor
  - List[int]
  - bool
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - dim
  - keepdim
  - out
  required:
  - true
  - false
  - false
  - true
name: torch.amin
package: torch
pass_rate: 65.0
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: list[int]
        keepdim: bool
        out: tensor
        self: tensor
      msg: Dimension out of range (expected to be in range of [-2, 1], but got 59)
      package: torch
    txt: out.dtype == self.dtype
  - f1_score: 65.31986531986531
    overall_score: 51.5
    precision: 97.0
    recall: 49.23857868020304
- - cot: 'The error occurs because the dimension provided, 43, is out of the valid
      range. In this case, the valid range for the dimension would be [-5, 4] since
      the shape of the tensor is [4, 8, 9]. To prevent this error in the future and
      generate constraints that do not trigger it, we need to ensure that the "dim"
      value is always within the valid range for the given tensor. The constraint
      for the ''dim'' parameter can be expressed as:'
    length: 1
    target:
      choosen_dtype:
        dim: list[int]
        keepdim: bool
        out: tensor
        self: tensor
      msg: Dimension out of range (expected to be in range of [-5, 4], but got 43)
      package: torch
    txt: all(d >= -len(self.shape) and d < len(self.shape) for d in dim)
  - f1_score: 64.8780487804878
    overall_score: 36.25
    precision: 66.5
    recall: 63.33333333333333
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: List[int]
        keepdim: bool
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: List[int]
        keepdim: bool
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: List[int]
        keepdim: bool
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: List[int]
        keepdim: bool
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
