args:
  dtype:
  - Tensor
  - int
  - None
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - dim
  - dtype
  - out
  required:
  - true
  - true
  - false
  - true
name: torch.cumprod
package: torch
pass_rate: 89.0
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        dim: int
        dtype: None
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: (out.rank==self.rank) and (out.shape == self.shape)
  - f1_score: 90.6344410876133
    overall_score: 51.31722054380665
    precision: 100.0
    recall: 82.8729281767956
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: int
        dtype: None
        out: tensor
        self: tensor
      msg: Dimension out of range (expected to be in range of [-7, 6], but got 8)
      package: torch
    txt: dim >= -len(self.shape)
  - f1_score: 82.49258160237387
    overall_score: 53.24629080118694
    precision: 92.66666666666666
    recall: 74.33155080213903
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: int
        dtype: None
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: int
        dtype: None
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
