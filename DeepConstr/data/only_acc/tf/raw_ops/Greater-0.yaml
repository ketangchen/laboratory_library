args:
  dtype:
  - str
  - float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
  - float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
  is_pos:
  - false
  - false
  - false
  name:
  - name
  - x
  - y
  required:
  - false
  - true
  - true
name: tf.raw_ops.Greater
package: tensorflow
pass_rate: 100
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: '{{function_node __wrapped__Greater_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        Incompatible shapes: [5,5] vs. [7,7,7] [Op:Greater] name: MxWo'
      package: tensorflow
    txt: (all(x.shape[i] == y.shape[i] or x.shape[i] == 1 or y.shape[i] == 1 for i
      in range(-1, -min(len(x.shape), len(y.shape))-1, -1))) and (len(x) == len(y))
  - f1_score: 90.6344410876133
    overall_score: 100
    precision: 100.0
    recall: 82.8729281767956
- - cot: "Based on the given runtime information, the error arises because the function\
      \ is trying to perform the Greater operation on a float tensor and an int32\
      \ tensor. However, both tensors in the generated args must have the same data\
      \ type.\n\nTo prevent this error, the data type of tensor y should be corrected\
      \ to be the same as the data type of tensor x. \n\nThe constraint to prevent\
      \ the error is:"
    length: 1
    target:
      choosen_dtype:
        name: str
        x: tensor
        y: tensor
      msg: 'cannot compute Greater as input #1(zero-based) was expected to be a float
        tensor but is a int32 tensor [Op:Greater] name: Kcqb'
      package: tensorflow
    txt: dtype(y) == dtype(x)
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
        y: float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
      msg: negative dimensions are not allowed
      package: tensorflow
    txt: all(i >= 0 for i in x.shape) and all(i >= 0 for i in y.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        name: str
        x: float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
        y: float32,float64,int32,uint8,int16,int8,int64,bfloat16,uint16,float16,uint32,uint64
      msg: Too large tensor shape
      package: tensorflow
    txt: x.rank <= 7 and y.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
