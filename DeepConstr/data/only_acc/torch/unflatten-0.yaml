args:
  dtype:
  - Tensor
  - int
  - List[int]
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - dim
  - sizes
  required:
  - true
  - true
  - true
name: torch.unflatten
package: torch
pass_rate: 80.5
rules:
- - cot: 'The constraint to prevent the error can be formulated as:'
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: tensor
        sizes: list[int]
      msg: Dimension out of range (expected to be in range of [-2, 1], but got 7)
      package: torch
    txt: dim >= -2 and dim < 2
  - f1_score: 81.79959100204499
    overall_score: 100
    precision: 100.0
    recall: 69.20415224913495
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: tensor
        sizes: list[int]
      msg: 'unflatten: sizes must be non-empty'
      package: torch
    txt: len(sizes) > 0
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: tensor
        sizes: list[int]
      msg: 'unflatten: Provided sizes [1] don''t multiply up to the size of dim 0
        (3) in the input tensor'
      package: torch
    txt: dim == sizes[0] * self.dim
  - f1_score: 66.88963210702342
    overall_score: 100
    precision: 100.0
    recall: 50.25125628140703
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: tensor
        sizes: list[int]
      msg: Dimension specified as 0 but tensor has no dimensions
      package: torch
    txt: dim < len(self.shape)
  - f1_score: 97.08737864077668
    overall_score: 100
    precision: 100.0
    recall: 94.33962264150942
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: Tensor
        sizes: List[int]
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        dim: int
        self: Tensor
        sizes: List[int]
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
