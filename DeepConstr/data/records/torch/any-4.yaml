args:
  dtype:
  - Tensor
  - Optional[List[int]]
  - bool
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - dim
  - keepdim
  - out
  required:
  - true
  - false
  - false
  - true
name: torch.any
package: torch
pass_rate: 100
rules:
- - cot: The error occurs because the function `torch.any` is attempting to create
      a tensor with a negative dimension, which is not allowed. In the output tensor
      `out=Tensor<b>[1, 5, 3, 4, 8, 2, -4]`, the dimension -4 is not valid. Therefore,
      all dimensions of the output tensor should be non-negative.
    length: 1
    target:
      choosen_dtype:
        dim: None
        keepdim: bool
        out: tensor
        self: tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in out.shape)
  - f1_score: 81.5873015873016
    overall_score: 100
    precision: 100.0
    recall: 68.90080428954424
- - cot: "The error is triggered because we are trying to resize a tensor that is\
      \ not resizable. In this operation, the output tensor 'out' is attempting to\
      \ be resized according to the result of the torch.any operation on 'self'. However,\
      \ the shapes of 'out' and 'self' tensors do not match. \n\nTo prevent this error,\
      \ we need to ensure that the 'out' tensor has the same shape as the 'self' tensor\
      \ after applying the torch.any operation. Since keepdim is False, the result\
      \ of torch.any will have the same dimensions as 'self' but with dimension size\
      \ of 1 in the dimension we reduce. Since no dimension is specified, all dimensions\
      \ are reduced.\n\nTherefore, the condition that prevents the error is as follows:"
    length: 1
    target:
      choosen_dtype:
        dim: None
        keepdim: bool
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.rank==1 and out.shape[0]==1
  - f1_score: 67.49156355455568
    overall_score: 45.74578177727784
    precision: 100.0
    recall: 50.93378607809848
- - cot: 'Error is triggered because the output tensor is of type Float, but torch.any
      only supports bool tensor for the result. The constraint to prevent this error
      is to ensure that the output tensor is of type bool. Therefore, the formula
      is:'
    length: 1
    target:
      choosen_dtype:
        dim: None
        keepdim: bool
        out: tensor
        self: tensor
      msg: 'any only supports bool tensor for result, got: Float'
      package: torch
    txt: out.dtype == bool
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: Optional[List[int]]
        keepdim: bool
        out: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        dim: Optional[List[int]]
        keepdim: bool
        out: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
