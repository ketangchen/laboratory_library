args:
  dtype:
  - Tensor
  - float
  - Optional[bool]
  is_pos:
  - false
  - false
  - false
  name:
  - input
  - p
  - train
  required:
  - true
  - true
  - false
name: torch.native_dropout
package: torch
pass_rate: 100
rules:
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        input: tensor
        p: float
        train: None
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: dtype(input)==torch.float32
  - f1_score: 99.83361064891847
    overall_score: 61.91680532445923
    precision: 100.0
    recall: 99.66777408637874
- - cot: 'The error occurs because the value of the ''p'' parameter is outside the
      valid range. The expected range for the ''p'' parameter is [0, 1], but the given
      value is -6. To prevent this error in the future and generate constraints that
      do not trigger it, we need to ensure that the ''p'' value is always within the
      valid range for the given function. The constraint for the ''p'' parameter can
      be expressed as:'
    length: 1
    target:
      choosen_dtype:
        input: tensor
        p: float
        train: None
      msg: bernoulli_ expects p to be in [0, 1], but got p=4
      package: torch
    txt: p >= 0 and p <= 1
  - f1_score: 99.17355371900828
    overall_score: 61.58677685950414
    precision: 100.0
    recall: 98.36065573770493
- - cot: default
    length: 1
    target:
      choosen_dtype:
        input: Tensor
        p: float
        train: Optional[bool]
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in input.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 1
    target:
      choosen_dtype:
        input: Tensor
        p: float
        train: Optional[bool]
      msg: Too large tensor shape
      package: torch
    txt: input.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
