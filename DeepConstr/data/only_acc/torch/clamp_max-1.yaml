args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  name:
  - self
  - max
  required:
  - true
  - true
name: torch.clamp_max
package: torch
pass_rate: 100
rules:
- - cot: "Error is triggered because the size of tensor \"self\" (0) does not match\
      \ the size of tensor \"max\" (9) at non-singleton dimension 3. \n\nTo prevent\
      \ this error, we need to ensure that the dimensions and shape of the two tensors\
      \ are consistent. \n\nThe constraint formula can be written as:"
    length: 1
    target:
      choosen_dtype:
        max: tensor
        self: tensor
      msg: The size of tensor a (7) must match the size of tensor b (6) at non-singleton
        dimension 3
      package: torch
    txt: self.dim == max.dim and self.shape == max.shape
  - f1_score: 99.83361064891847
    overall_score: 100
    precision: 100.0
    recall: 99.66777408637874
- - cot: default
    length: 2
    target:
      choosen_dtype:
        max: Tensor
        self: Tensor
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in self.shape) and all(i >= 0 for i in max.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        max: Tensor
        self: Tensor
      msg: Too large tensor shape
      package: torch
    txt: self.rank <= 7 and max.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
