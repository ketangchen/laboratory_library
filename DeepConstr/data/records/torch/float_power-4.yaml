args:
  dtype:
  - number
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - exponent
  - out
  required:
  - true
  - true
  - true
name: torch.float_power
package: torch
pass_rate: 100
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        exponent: tensor
        out: tensor
        self: int
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.rank==exponent.rank and all(out.shape[i]==exponent.shape[i] for i in
      range(out.rank))
  - f1_score: 79.36507936507938
    overall_score: 51.68253968253969
    precision: 100.0
    recall: 65.78947368421053
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        exponent: tensor
        out: tensor
        self: int
      msg: the output given to float_power has dtype Float but the operation's result
        requires dtype Double
      package: torch
    txt: dtype(out) == Double
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: default
    length: 2
    target:
      choosen_dtype:
        exponent: Tensor
        out: Tensor
        self: number
      msg: negative dimensions are not allowed
      package: torch
    txt: all(i >= 0 for i in exponent.shape) and all(i >= 0 for i in out.shape)
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
- - cot: default
    length: 2
    target:
      choosen_dtype:
        exponent: Tensor
        out: Tensor
        self: number
      msg: Too large tensor shape
      package: torch
    txt: exponent.rank <= 7 and out.rank <= 7
  - f1_score: -1
    overall_score: -1
    precision: -1
    recall: -1
